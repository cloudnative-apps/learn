<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Microservice - Category - Tech Blog</title><link>http://localhost:1313/learn/categories/microservice/</link><description>Microservice - Category - Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sharadit2011@outlook.com (Sharad)</managingEditor><webMaster>sharadit2011@outlook.com (Sharad)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 06 Mar 2020 21:29:01 +0800</lastBuildDate><atom:link href="http://localhost:1313/learn/categories/microservice/" rel="self" type="application/rss+xml"/><item><title>Microservice Patterns</title><link>http://localhost:1313/learn/microservice-patterns/</link><pubDate>Fri, 06 Mar 2020 21:29:01 +0800</pubDate><author>Sharad</author><guid>http://localhost:1313/learn/microservice-patterns/</guid><description>DDD in brief Aggregates and aggregate roots The aggregate pattern is a specific software design pattern within DDD. It promotes the collection of related entities and aggregates them into a unit. Aggregates make it easier to define ownership of elements in large systems. Aggregates make it easier to enforce certain rules for data and validation across multiple objects. aggregates are conceptually composed of entities and value objects that relate to each other in some way Entity An entity represents data that might need to traverse multiple microservices and, as a result, needs to have an identity value that can uniquely identify it in any system.</description></item></channel></rss>