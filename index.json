[{"categories":["Labs"],"content":"Azure, kubernets ,AKS, EKS, ECS etc","date":"2020-03-06","objectID":"/labs/","tags":["Azure","AKS","Microservice","Helm"],"title":"Clouds Labs","uri":"/labs/"},{"categories":["documentation"],"content":"Docker, kubernets ,AKS, EKS, ECS etc","date":"2020-03-06","objectID":"/conainerization/","tags":["docker","kubernets","container","microservice"],"title":"Docker and Kubernets","uri":"/conainerization/"},{"categories":["documentation"],"content":"Docker ","date":"2020-03-06","objectID":"/conainerization/:1:0","tags":["docker","kubernets","container","microservice"],"title":"Docker and Kubernets","uri":"/conainerization/"},{"categories":["documentation"],"content":"Install Docker Install Docker: Windows Use the following URL and download the installation file: https://hub.docker.com/editions/community/docker-ce-desktop-windows Install Docker: Linux Use the following URL and download the installation file: https://hub.docker.com/editions/community/docker-ce-desktop-windows Install Docker: Mac Use the following URL and download the installation file: https://hub.docker.com/editions/community/docker-ce-desktop-windows Commands $ docker version // docker version ps – list containers docker ps docker ps -a Stop container docker stop [name of container] Remove a container docker rm [name of container] List images docker images Remove images docker rmi nginx ///! Delete all dependent containers to remove image Download image docker run nginx docker pull nginx Exec – execute a command docker exec \u003c\u003cname of image\u003e\u003e cat /etc/hosts Run – attach and detach docker run kodekloud/simple-webapp docker run –d kodekloud/simple-webapp Run – tag docker run redis:4.0 TAG docker run –i kodekloud/simple-prompt-docker Port MappingSummary Preview \" Port Mapping Run volume mapping docker run –v /opt/datadir:/var/lib/mysql mysql Inspect container docker inspect \u003c\u003ccontainer name\u003e\u003e Container’s log docker logs \u003c\u003ccontainer name\u003e\u003e Environment variable docker run -e APP_COLOR=blue simple-webapp-color ` Dockerfile FROM Ubuntu #OS - Ubuntu RUN apt-get update #Update apt repo RUN apt-get install python #Install dependencies using apt RUN pip install flask #Install Python dependencies using pip RUN pip install flask-mysql COPY . /opt/source-code #Copy source code to /opt folder ENTRYPOINT FLASK_APP=/opt/source-code/app.py flask run #Run the web server using “flask” command docker build Dockerfile –t mmumshad/my-custom-app docker push mmumshad/my-custom-app D ","date":"2020-03-06","objectID":"/conainerization/:1:1","tags":["docker","kubernets","container","microservice"],"title":"Docker and Kubernets","uri":"/conainerization/"},{"categories":["documentation"],"content":"Kubernetes https://github.com/zealvora/certified-kubernetes-application-developer Kubectl kubectl, allows you to run commands against Kubernetes clusters. Install kubectl https://kubernetes.io/docs/tasks/tools/ KIND Minikube https://minikube.sigs.k8s.io/docs/start/ Lets you run Kubernetes locally minikube start minikube start --vm-driver hyperv --hyperv-virtual-switch \"Default Switch\" kubectl get nodes Open minikube dashboard minikube dashboard ","date":"2020-03-06","objectID":"/conainerization/:2:0","tags":["docker","kubernets","container","microservice"],"title":"Docker and Kubernets","uri":"/conainerization/"},{"categories":["documentation"],"content":"Kubernetes on AWS ","date":"2020-03-06","objectID":"/conainerization/:3:0","tags":["docker","kubernets","container","microservice"],"title":"Docker and Kubernets","uri":"/conainerization/"},{"categories":["documentation"],"content":"EKS ( Elastic Kubernets Service) ","date":"2020-03-06","objectID":"/conainerization/:3:1","tags":["docker","kubernets","container","microservice"],"title":"Docker and Kubernets","uri":"/conainerization/"},{"categories":["documentation"],"content":"Install KubeCtl Reference: https://docs.aws.amazon.com/eks/latest/userguide/install-kubectl.html Primary scalar types Create Cluster eksctl create cluster --name=eksdemo1 --region=us-east-1 --zones=us-east-1a,us-east-1b --without-nodegroup Get List of clusters eksctl get cluster Step-02: Create \u0026 Associate IAM OIDC Provider for our EKS Cluster To enable and use AWS IAM roles for Kubernetes service accounts on our EKS cluster, we must create \u0026 associate OIDC identity provider. To do so using eksctl we can use the below command. Use latest eksctl version (as on today the latest version is 0.21.0) Template eksctl utils associate-iam-oidc-provider \\ --region region-code \\ --cluster \u003ccluter-name\u003e \\ --approve Replace with region \u0026 cluster name eksctl utils associate-iam-oidc-provider --region us-east-1 --cluster eksdemo1 --approve Step-03: Create EC2 Keypair Create a new EC2 Keypair with name as kube-demo This keypair we will use it when creating the EKS NodeGroup. This will help us to login to the EKS Worker Nodes using Terminal. Step-04: Create Node Group with additional Add-Ons in Public Subnets These add-ons will create the respective IAM policies for us automatically within our Node Group role. Create Public Node Group eksctl create nodegroup --cluster=eksdemo1 \\ --region=us-east-1 \\ --name=eksdemo1-ng-public1 \\ --node-type=t3.medium \\ --nodes=2 \\ --nodes-min=2 \\ --nodes-max=4 \\ --node-volume-size=20 \\ --ssh-access \\ --ssh-public-key=kube-demo \\ --managed \\ --asg-access \\ --external-dns-access \\ --full-ecr-access \\ --appmesh-access \\ --alb-ingress-access eksctl create nodegroup --cluster=eksdemo1 --region=us-east-1 --name=eksdemo1-ng-public1 --node-type=t3.medium --nodes=2 --nodes-min=2 --nodes-max=4 --node-volume-size=20 --ssh-access --ssh-public-key=ekc-ecs-demo-2022 --managed --asg-access --external-dns-access --full-ecr-access --appmesh-access --alb-ingress-access Step-05: Verify Cluster \u0026 Nodes List EKS clusters eksctl get cluster List NodeGroups in a cluster eksctl get nodegroup --cluster=\u003cclusterName\u003e List Nodes in current kubernetes cluster kubectl get nodes -o wide Our kubectl context should be automatically changed to new cluster kubectl config view –minify ","date":"2020-03-06","objectID":"/conainerization/:3:2","tags":["docker","kubernets","container","microservice"],"title":"Docker and Kubernets","uri":"/conainerization/"},{"categories":["documentation"],"content":"AKS (Azure Kubernetes Service) AKS az login az aks install-cli Get k8s available versions az aks get-versions --location $REGION -o table To configure kubectl to connect to your Kubernetes cluster az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME * List Kubernetes Worker Nodes kubectl get nodes kubectl get nodes -o wide List Namespaces kubectl get namespaces kubectl get ns List Pods from all namespaces kubectl get pods --all-namespaces List all k8s objects from Cluster Control plane kubectl get all --all-namespaces Open k8s Dashboard az aks browse --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME If you’re using RBAC enabled kubernetes cluster, you need to configure Service Account and RoleBinding in order to make Dashbaord work.Here is a way to give full privilege (role: cluster-admin) to the Dashboard’s Service Account kubernetes-dashboard # Here is a way to give full privilege (role: cluster-admin) to the Dashboard’s Service Account kubernetes-dashboard $ cat \u003c\u003cEOF | kubectl apply -f - apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: kubernetes-dashboard labels: k8s-app: kubernetes-dashboard roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-admin subjects: - kind: ServiceAccount name: kubernetes-dashboard namespace: kube-system EOF Get cluster Info az aks show --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME -o table Get Node group info az aks show --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --query nodeResourceGroup -o tsv *Scale AKS Cluster nodes az aks scale --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP --node-count $NODE_COUNT Upgrade AKS Cluster version az aks upgrade --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP --kubernetes-version $KUBERNETS_VERSION Check which Kubernetes releases are available for upgrade for your AKS cluster az aks get-upgrades –name $CLUSTER_NAME –resource-group $RESOURCE_GROUP -o table Enable Add-on Enable Azure Monitor for Containers OMS_WORKSPACE_RESOURCE_ID=\"/subscriptions/87c7c7f9-0c9f-47d1-a856-1305a0cbfd7a/resourceGroups/DefaultResourceGroup-EJP/providers/Microsoft.OperationalInsights/workspaces/DefaultWorkspace-77c7c7f9-0c9f-47d1-a856-1305a0cbfd7a-EJP\" az aks enable-addons -a monitoring --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP --workspace-resource-id $OMS_WORKSPACE_RESOURCE_ID Enable HTTP Application Routing az aks enable-addons --addons http_application_routing --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP Check egress IP kubectl run -it --rm runtest --image=debian --generator=run-pod/v1 pod\u003e apt-get update \u0026\u0026 apt-get install curl -y pod\u003e curl -s checkip.dyndns.org ACR Create an Azure Container Registry az acr create --resource-group $RESOURCE_GROUP --name $ACR_NAME --sku Basic SKU: Basic, Standard, Premium, Classic Get ACR list az acr list -o table Get ACR Detail az acr show -n $ACR_NAME -g $RESOURCE_GROUP Get only ACR ID az acr show -n $ACR_NAME -g $RESOURCE_GROUP --query \"id\" -o tsv Show ACR Repositories Show list of repositories az acr repository list -n $ACR_NAME -o table Show the detail of a repository az acr repository show -n $ACR_NAME --repository $REPO_NAME -o table Show list of tags in a repository az acr repository show-tags -n $ACR_NAME --repository $REPO_NAME -o table Login to ACR az acr login --name $ACR_NAME Alternatively login with docker command ACR_LOGIN_SERVER=$ACR_NAME.azurecr.io docker login $ACR_LKOGIN_SERVER -u $ACR_USER -p $ACR_PASSWORD ACR Task - Build az acr build --registry $ACR_NAME --image [CONTAINER_NAME:TAG] [SOURCE_LOCATION] More usages are: Queue a local context (folder), pushed to ACR when complete, with streaming logs. az acr build -t sample/hello-world:{{.Run.ID}} -r MyRegistry . Queue a local context, pushed to ACR without streaming logs. az acr build -t sample/hello-world:{{.Run.ID}} -r MyRegistry --no-logs . Queue a local context to validate a build is successful, without pushing to the registry using t","date":"2020-03-06","objectID":"/conainerization/:4:0","tags":["docker","kubernets","container","microservice"],"title":"Docker and Kubernets","uri":"/conainerization/"},{"categories":["documentation"],"content":"1 Requirements eyteyhdhgh Thanks to the simplicity of Hugo, Hugo is the only dependency of this theme. Just install latest version of  Hugo (\u003e 0.84.0) for your OS (Windows, Linux, macOS). Why not support earlier versions of Hugo? Since Markdown Render Hooks was introduced in the Hugo Christmas Edition and some of image resources are using webp which was introduced in 0.84.0, this theme only supports Hugo versions above 0.84.0. Hugo extended version is recommended Since some features of this theme need to processes  SCSS to  CSS, it is recommended to use Hugo extended version for better experience. ","date":"2020-03-06","objectID":"/conainerization/:5:0","tags":["docker","kubernets","container","microservice"],"title":"Docker and Kubernets","uri":"/conainerization/"},{"categories":["documentation"],"content":"2 Installation The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners. ","date":"2020-03-06","objectID":"/conainerization/:6:0","tags":["docker","kubernets","container","microservice"],"title":"Docker and Kubernets","uri":"/conainerization/"},{"categories":["documentation"],"content":"2.1 Create Your Project Hugo provides a new command to create a new website: hugo new site my_website cd my_website testigggg ","date":"2020-03-06","objectID":"/conainerization/:6:1","tags":["docker","kubernets","container","microservice"],"title":"Docker and Kubernets","uri":"/conainerization/"},{"categories":["documentation"],"content":"Discover what the Hugo - FeelIt theme is all about and the core-concepts behind it.","date":"2020-03-06","objectID":"/theme-documentation-basics/","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"Discover what the Hugo - FeelIt theme is all about and the core-concepts behind it. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:0:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"1 Requirements Thanks to the simplicity of Hugo, Hugo is the only dependency of this theme. Just install latest version of  Hugo (\u003e 0.84.0) for your OS (Windows, Linux, macOS). Why not support earlier versions of Hugo? Since Markdown Render Hooks was introduced in the Hugo Christmas Edition and some of image resources are using webp which was introduced in 0.84.0, this theme only supports Hugo versions above 0.84.0. Hugo extended version is recommended Since some features of this theme need to processes  SCSS to  CSS, it is recommended to use Hugo extended version for better experience. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:1:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2 Installation The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.1 Create Your Project Hugo provides a new command to create a new website: hugo new site my_website cd my_website ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.2 Install the Theme The FeelIt theme’s repository is: https://github.com/khusika/FeelIt. You can download the latest release  .zip file of the theme and extract it in the themes directory. Alternatively, clone this repository to the themes directory: git clone https://github.com/khusika/FeelIt.git themes/FeelIt Or, create an empty git repository and make this repository a submodule of your site directory: git init git submodule add https://github.com/khusika/FeelIt.git themes/FeelIt ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.3 Basic Configuration The following is a basic configuration for the FeelIt theme: baseURL = \"http://example.org/\" # [en, zh-cn, fr, ...] determines default content language defaultContentLanguage = \"en\" # language code languageCode = \"en\" title = \"My New Hugo Site\" # Change the default theme to be use when building the site with Hugo theme = \"FeelIt\" [params] # FeelIt theme version version = \"1.0.X\" [menu] [[menu.main]] identifier = \"posts\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" name = \"Posts\" url = \"/posts/\" # title will be shown when you hover on this menu link title = \"\" weight = 1 [[menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" weight = 2 [[menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" weight = 3 # Markup related configuration in Hugo [markup] # Syntax Highlighting (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false is a necessary configuration (https://github.com/khusika/FeelIt/issues/158) noClasses = false Note When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (config.toml) and set the theme as the default. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.4 Create Your First Post Here is the way to create your first post: hugo new posts/first_post.md Feel free to edit the post file by adding some sample content and replacing the title value in the beginning of the file. Note By default all posts and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata, set the property draft: false or add -D/--buildDrafts parameter to hugo command. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:4","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.5 Launching the Website Locally Launch by using the following command: hugo serve Go to http://localhost:1313. Basic configuration previewBasic configuration preview \" Basic configuration preview Tip When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. Note Since the theme use .Scratch in Hugo to implement some features, it is highly recommended that you add --disableFastRender parameter to hugo server command for the live preview of the page you are editing. hugo serve --disableFastRender ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:5","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.6 Build the Website When your site is ready to deploy, run the following command: hugo A public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server. Tip The website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use AWS Amplify, Github pages, Render and more… ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:6","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"3 Configuration ","date":"2020-03-06","objectID":"/theme-documentation-basics/:3:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.1 Site Configuration In addition to Hugo global configuration and menu configuration, FeelIt lets you define the following parameters in your site configuration (here is a config.toml, whose values are default). Please open the code block below to view the complete sample configuration : [params] # FeelIt theme version version = \"1.0.X\" # site description description = \"This is My New Hugo Site\" # site keywords keywords = [\"Theme\", \"Hugo\"] # site default theme (\"light\", \"dark\", \"auto\") defaultTheme = \"auto\" # public git repo url only then enableGitInfo is true gitRepo = \"\" # which hash function used for SRI, when empty, no SRI is used # (\"sha256\", \"sha384\", \"sha512\", \"md5\") fingerprint = \"\" # date format dateFormat = \"2006-01-02\" # website images for Open Graph and Twitter Cards images = [\"/logo.png\"] # whether to enable CSS and JS source mapping SourceMap = true # PWA config [params.pwa] # whether to enable PWA support enable = true # service-worker version version = \"1.0.1\" # App icon config [params.app] # optional site title override for the app when added to an iOS home screen or Android launcher title = \"FeelIt\" # whether to omit favicon resource links noFavicon = false # modern SVG favicon to use in place of older style .png and .ico files svgFavicon = \"\" # Android browser theme color themeColor = \"#ffffff\" # Safari mask icon color iconColor = \"#5bbad5\" # Windows v8-10 tile color tileColor = \"#da532c\" # Search config [params.search] enable = true # type of search engine (\"lunr\", \"algolia\") type = \"lunr\" # max index length of the chunked content contentLength = 4000 # placeholder of the search bar placeholder = \"\" # max number of results length maxResultLength = 10 # snippet length of the result snippetLength = 30 # HTML tag name of the highlight part in results highlightTag = \"em\" # whether to use the absolute URL based on the baseURL in search index absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" # Header config [params.header] # desktop header mode (\"fixed\", \"normal\", \"auto\") desktopMode = \"fixed\" # mobile header mode (\"fixed\", \"normal\", \"auto\") mobileMode = \"auto\" # Header title config [params.header.title] # URL of the LOGO logo = \"\" # title name name = \"\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" # whether to use typeit animation for title name typeit = false # whether to show RSS icon rss = true # Footer config [params.footer] enable = true # Custom content (HTML format is supported) custom = '' # whether to show Hugo and theme info hugo = true # whether to show copyright info copyright = true # whether to show the author author = true # Site creation time since = 2019 # ICP info only in China (HTML format is supported) icp = \"\" # license info (HTML format is supported) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # Section (all posts) page config [params.section] # special amount of posts in each section page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # List (category or tag) page config [params.list] # special amount of posts in each list page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # [params.about] # whether to enable profile on about page # depends on .Site.Params.home.profile.enable enable = true # whether to enable param layout param = true # title for param layout paramTitle = \"Personal Information\" # general description of your site # can be write with markdown style description = \"[FeelIt](https://github.com/khusika/FeelIt) is a **clean**, **elegant** but **advanced** blog theme for [Hugo](https://gohugo.io/) developed by [Khusika](https://khusika.com). It is based on the original [LoveIt Theme](https://gi","date":"2020-03-06","objectID":"/theme-documentation-basics/:3:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.2 Favicons, Browserconfig, Manifest It is recommended to put your own favicons: apple-touch-icon.png (180x180) favicon-32x32.png (32x32) favicon-16x16.png (16x16) mstile-150x150.png (150x150) android-chrome-192x192.png (192x192) android-chrome-512x512.png (512x512) into /static. They’re easily created via https://realfavicongenerator.net/. Customize browserconfig.xml and site.webmanifest to set theme-color and background-color. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:3:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.3 Style Customization Note Hugo extended version is necessary for the style customization. FeelIt theme has been built to be as configurable as possible by defining custom .scss style files. The directory including the custom .scss style files is assets/css relative to your project root directory. In assets/css/_override.scss, you can override the variables in themes/FeelIt/assets/css/_variables.scss to customize the style. Here is a example: @import url('https://fonts.googleapis.com/css?family=Fira+Mono:400,700\u0026display=swap\u0026subset=latin-ext'); $code-font-family: Fira Mono, Source Code Pro, Menlo, Consolas, Monaco, monospace; In assets/css/_custom.scss, you can add some css style code to customize the style. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:3:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"4 Multilingual and i18n FeelIt theme is fully compatible with Hugo multilingual mode, which provides in-browser language switching. Language SwitchLanguage Switch \" Language Switch ","date":"2020-03-06","objectID":"/theme-documentation-basics/:4:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.1 Compatibility Language Hugo Code HTML lang Attribute Theme Docs Lunr.js Support German de de English en en Spanish es es French fr fr Indonesian id id Italian it it Polish pl pl Brazilian Portuguese pt-br pt-BR Romanian ro ro Russian ru ru Serbian sr sr Vietnamese vi vi Simplified Chinese zh-cn zh-CN Hungarian hu hu Czech cs cs Persian fa fa ","date":"2020-03-06","objectID":"/theme-documentation-basics/:4:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.2 Basic Configuration After learning how Hugo handle multilingual websites, define your languages in your site configuration. For example with English, Chinese and French website: # [en, zh-cn, fr, pl, ...] determines default content language defaultContentLanguage = \"en\" [languages] [languages.en] weight = 1 title = \"My New Hugo Site\" languageCode = \"en\" languageName = \"English\" [[languages.en.menu.main]] identifier = \"posts\" pre = \"\" post = \"\" name = \"Posts\" url = \"/posts/\" title = \"\" weight = 1 [[languages.en.menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" weight = 2 [[languages.en.menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" weight = 3 [languages.zh-cn] weight = 2 title = \"我的全新 Hugo 网站\" # language code, CN only here languageCode = \"zh-CN\" languageName = \"简体中文\" # whether to include Chinese/Japanese/Korean hasCJKLanguage = true [[languages.zh-cn.menu.main]] identifier = \"posts\" pre = \"\" post = \"\" name = \"文章\" url = \"/posts/\" title = \"\" weight = 1 [[languages.zh-cn.menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" weight = 2 [[languages.zh-cn.menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" weight = 3 [languages.fr] weight = 3 title = \"Mon nouveau site Hugo\" languageCode = \"fr\" languageName = \"Français\" [[languages.fr.menu.main]] identifier = \"posts\" pre = \"\" post = \"\" name = \"Postes\" url = \"/posts/\" title = \"\" weight = 1 [[languages.fr.menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"Balises\" url = \"/tags/\" title = \"\" weight = 2 [[languages.fr.menu.main]] identifier = \"categories\" name = \"Catégories\" pre = \"\" post = \"\" url = \"/categories/\" title = \"\" weight = 3 Then, for each new page, append the language code to the file name. Single file my-page.md is split in three files: in English: my-page.en.md in Chinese: my-page.zh-cn.md in French: my-page.fr.md Note Be aware that only translated pages are displayed in menu. It’s not replaced with default language content. Tip Use Front Matter parameter to translate urls too. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:4:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.3 Overwrite Translation Strings Translations strings are used for common default values used in the theme. Translations are available in some languages, but you may use another language or want to override default values. To override these values, create a new file in your local i18n folder i18n/\u003clanguageCode\u003e.toml and inspire yourself from themes/FeelIt/i18n/en.toml. By the way, as these translations could be used by other people, please take the time to propose a translation by  making a PR to the theme! ","date":"2020-03-06","objectID":"/theme-documentation-basics/:4:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"5 Search Based on Lunr.js or algolia, searching is supported in FeelIt theme. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:5:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"5.1 Output Configuration In order to generate index.json for searching, add JSON output file type to the home of the outputs part in your site configuration. [outputs] home = [\"HTML\", \"RSS\", \"JSON\"] ","date":"2020-03-06","objectID":"/theme-documentation-basics/:5:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"5.2 Search Configuration Based on index.json generated by Hugo, you could activate searching. Here is the search configuration in your site configuration: [params.search] enable = true # type of search engine (\"lunr\", \"algolia\") type = \"lunr\" # max index length of the chunked content contentLength = 4000 # placeholder of the search bar placeholder = \"\" # max number of results length maxResultLength = 10 # snippet length of the result snippetLength = 30 # HTML tag name of the highlight part in results highlightTag = \"em\" # whether to use the absolute URL based on the baseURL in search index absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" How to choose search engine? The following is a comparison of two search engines: lunr: simple, no need to synchronize index.json, no limit for contentLength, but high bandwidth and low performance (Especially for Chinese which needs a large segmentit library) algolia: high performance and low bandwidth, but need to synchronize index.json and limit for contentLength The content of the post is separated by h2 and h3 HTML tag to improve query performance and basically implement full-text search. contentLength is used to limit the max index length of the part starting with h2 and h3 HTML tag. Tips about algolia You need to upload index.json files to algolia to activate searching. You could upload the index.json files by browsers but a CLI tool may be better. Algolia Atomic is a good choice. To be compatible with Hugo multilingual mode, you need to upload different index.json for each language to the different index of algolia, such as zh-cn/index.json or fr/index.json… ","date":"2020-03-06","objectID":"/theme-documentation-basics/:5:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"Find out how to create and organize your content quickly and intuitively in FeelIt theme.","date":"2020-03-05","objectID":"/theme-documentation-content/","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Find out how to create and organize your content quickly and intuitively in FeelIt theme. ","date":"2020-03-05","objectID":"/theme-documentation-content/:0:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"1 Contents Organization A few suggestions to help you get a good looking site quickly: Keep post pages in the content/posts directory, for example: content/posts/my-first-post.md Keep other pages in the content directory, for example: content/about.md Local resources organization Local Resource Reference There are three ways to reference local resources such as images and music: Using page resources in page bundles. You can reference page resources by the value for Resources.GetMatch or the filepath of the resource relative to the page directory directly. Store resources in the assets directory, which is /assets by default. The filepath of the resource to reference in the post is relative to the assets directory. Store resources in the static directory, which is /static by default. The filepath of the resource to reference in the post is relative to the static directory. The priority of references is also in the above order. There are many places in the theme where the above local resource references can be used, such as links, images, image shortcode, music shortcode and some params in the front matter. Images in page resources or assets directory processing will be supported in the future. It’s really cool! ","date":"2020-03-05","objectID":"/theme-documentation-content/:1:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"2 Front Matter Hugo allows you to add front matter in yaml, toml or json to your content files. Note Not all of the below front matters need to be set in each of your posts. It is necessary only if the front matters and the page part in your site configuration are inconsistent. Here is a front matter example: ---title:\"My First Post\"subtitle:\"\"date:2020-03-04T15:58:26+08:00lastmod:2020-03-04T15:58:26+08:00draft:trueauthor:\"\"authorLink:\"\"description:\"\"license:\"\"images:[]tags:[]categories:[]featuredImage:\"\"featuredImagePreview:\"\"hiddenFromHomePage:falsehiddenFromSearch:falsetwemoji:falselightgallery:trueruby:truefraction:truefontawesome:truelinkToMarkdown:truerssFullText:falsetoc:enable:trueauto:truecode:copy:true# ...math:enable:true# ...mapbox:accessToken:\"\"# ...share:enable:true# ...comment:enable:true# ...library:css:# someCSS = \"some.css\"# located in \"assets/\"# Or# someCSS = \"https://cdn.example.com/some.css\"js:# someJS = \"some.js\"# located in \"assets/\"# Or# someJS = \"https://cdn.example.com/some.js\"seo:images:[]# ...--- title: the title for the content. subtitle: the subtitle for the content. date: the datetime assigned to this page, which is usually fetched from the date field in front matter, but this behaviour is configurabl in the site configuration. lastmod: the datetime at which the content was last modified. draft: if true, the content will not be rendered unless the --buildDrafts/-D flag is passed to the hugo command. author: the author for the content. authorLink: the link of the author. description: the description for the content. license: the special lisence for this content. images: page images for Open Graph and Twitter Cards. tags: the tags for the content. categories: the categories for the content. featuredImage: the featured image for the content. featuredImagePreview: the featured image for the content preview in the home page. hiddenFromHomePage: if true, the content will not be shown in the home page. hiddenFromSearch: if true, the content will not be shown in the search results. twemoji: if true, the content will enable the twemoji. lightgallery: if true, images in the content will be shown as the gallery. ruby: if true, the content will enable the ruby extended syntax. fraction: if true, the content will enable the fraction extended syntax. fontawesome: if true, the content will enable the Font Awesome extended syntax. linkToMarkdown: if true, the footer of the content will be shown the link to the orignal Markdown file. rssFullText: if true, the full text content will be shown in RSS. toc: the same as the params.page.toc part in the site configuration. code: the same as the params.page.code part in the site configuration. math: the same as the params.page.math part in the site configuration. mapbox: the same as the params.page.mapbox part in the site configuration. share: the same as the params.page.share part in the site configuration. comment: the same as the params.page.comment part in the site configuration. library: the same as the params.page.library part in the site configuration. seo: the same as the params.page.seo part in the site configuration. Tip featuredImage and featuredImagePreview support the complete usage of local resource references. If the page resource with name: featured-image or name: featured-image-preview is set in the front matter, it is not necessary to set the parameter featuredImage or featuredImagePreview: resources:- name:featured-imagesrc:featured-image.webp- name:featured-image-previewsrc:featured-image-preview.jpg ","date":"2020-03-05","objectID":"/theme-documentation-content/:2:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"3 Content Summaries FeelIt theme uses the summary of the content to display abstract information in the home page. Hugo can generate summaries of your content. Summary PreviewSummary Preview \" Summary Preview ","date":"2020-03-05","objectID":"/theme-documentation-content/:3:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Automatic Summary Splitting By default, Hugo automatically takes the first 70 words of your content as its summary. You may customize the summary length by setting summaryLength in the site configuration. If you are creating content in a CJKChinese/Japanese/Korean language and want to use Hugo’s automatic summary splitting, set hasCJKLanguage to true in your site configuration. ","date":"2020-03-05","objectID":"/theme-documentation-content/:3:1","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Manual Summary Splitting Alternatively, you may add the \u003c!--more--\u003e summary divider where you want to split the article. Content that comes before the summary divider will be used as that content’s summary. Note Be careful to enter \u003c!--more--\u003e exactly; i.e., all lowercase and with no whitespace. ","date":"2020-03-05","objectID":"/theme-documentation-content/:3:2","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Front Matter Summary You might want your summary to be something other than the text that starts the article. In this case you can provide a separate summary in the summary variable of the article front matter. ","date":"2020-03-05","objectID":"/theme-documentation-content/:3:3","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Use Description as Summary You might want your description in the description variable of the article front matter as the summary. You may add the \u003c!--more--\u003e summary divider at the start of the article. Keep content that comes before the summary divider empty. Then FeelIt theme will use your description as the summary. ","date":"2020-03-05","objectID":"/theme-documentation-content/:3:4","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Priority Order of Summary Selection Because there are multiple ways in which a summary can be specified it is useful to understand the order. It is as follows: If there is a \u003c!--more--\u003e summary divider present in the article but no content is before the divider, the description will be used as the summary. If there is a \u003c!--more--\u003e summary divider present in the article the text up to the divider will be provided as per the manual summary split method. If there is a summary variable in the article front matter the value of the variable will be provided as per the front matter summary method. The text at the start of the article will be provided as per the automatic summary split method. Note It is not recommended to include rich text block elements in the summary, which will cause typographic errors. Such as code blocks, pictures, tables, etc. ","date":"2020-03-05","objectID":"/theme-documentation-content/:3:5","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"4 Basic Markdown Syntax This part is shown in the basic markdown syntax page. ","date":"2020-03-05","objectID":"/theme-documentation-content/:4:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"5 Extended Markdown Syntax FeelIt theme has some extended syntax elements for you to write articles. ","date":"2020-03-05","objectID":"/theme-documentation-content/:5:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Emoji Support This part is shown in the emoji support page. ","date":"2020-03-05","objectID":"/theme-documentation-content/:5:1","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Mathematical Formula FeelIt theme supports mathematical formulas based on $ \\KaTeX $. Set the property enable = true under [params.math] in your site configuration and the property math: true of the article front matter to enable the automatic rendering of mathematical formulas. Tip Here is a list of $ \\TeX $ functions supported by $ \\KaTeX $. Block Formula The default block delimiters are $$/$$ and \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] The rendered output looks like this: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] Inline Formula The default inline delimiters are $/$ and \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ and \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) The rendered output looks like this: $ c = \\pm\\sqrt{a^2 + b^2} $ and \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) Tip You can add more block and inline delimiters in your site configuration. Copy-tex Copy-tex is an extension for $ \\KaTeX $. By the extension, when selecting and copying $ \\KaTeX $ rendered elements, copies their $ \\LaTeX $ source to the clipboard. Set the property copyTex = true under [params.math] in your site configuration to enable Copy-tex. Select and copy the formula rendered in the previous section, and you can find that the copied content is the LaTeX source code. mhchem mhchem is an extension for $ \\KaTeX $. By the extension, you can write beautiful chemical equations easily in the article. Set the property mhchem = true under [params.math] in your site configuration to enable mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ The rendered output looks like this: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"2020-03-05","objectID":"/theme-documentation-content/:5:2","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Ruby Annotation An extended Markdown syntax for ruby annotation is supported in FeelIt theme: [Hugo]^(An open-source static site generator) The rendered output looks like this: HugoAn open-source static site generator ","date":"2020-03-05","objectID":"/theme-documentation-content/:5:3","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Fraction An extended Markdown syntax for fraction is supported in FeelIt theme: [Light]/[Dark] [99]/[100] The rendered output looks like this: Light/Dark 90/100 ","date":"2020-03-05","objectID":"/theme-documentation-content/:5:4","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Font Awesome FeelIt theme uses Font Awesome as the icon library. You can easily use these icons in your articles. Get the class of icons you wanted from the Font Awesome website. Gone camping! :(fas fa-campground fa-fw): Be back soon. That is so funny! :(far fa-grin-tears): The rendered output looks like this: Gone camping!  Be back soon. That is so funny! ","date":"2020-03-05","objectID":"/theme-documentation-content/:5:5","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Escape character In some special cases (when writing this theme documentation ), your content will conflict with basic or extended Markdown syntax, and it is inevitable. The escape character syntax can help you build the content you wanted: {?X} -\u003e X For example, two : will enable emoji syntax, which is not the behavior you want. The escape character syntax is like this: {?:}joy: The rendered output looks like this: :joy: instead of 😂 Tip This is related to an issue for Hugo, which has not been resolved. Another example is: [link{?]}(#escape-character) The rendered output looks like this: [link](#escape-character) instead of link. ","date":"2020-03-05","objectID":"/theme-documentation-content/:5:6","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Hugo provides multiple built-in shortcodes for author convenience and to keep your markdown content clean.","date":"2020-03-04","objectID":"/theme-documentation-built-in-shortcodes/","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"Hugo provides multiple built-in shortcodes for author convenience and to keep your markdown content clean. Hugo uses Markdown for its simple content format. However, there are a lot of things that Markdown doesn’t support well. You could use pure HTML to expand possibilities. But this happens to be a bad idea. Everyone uses Markdown because it’s pure and simple to read even non-rendered. You should avoid HTML to keep it as simple as possible. To avoid this limitations, Hugo created shortcodes. A shortcode is a simple snippet that can generate reasonable HTML code and conforms to Markdown’s design philosophy. Hugo ships with a set of predefined shortcodes that represent very common usage. These shortcodes are provided for author convenience and to keep your markdown content clean. ","date":"2020-03-04","objectID":"/theme-documentation-built-in-shortcodes/:0:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"1 figure Documentation of figure Example figure input: {{\u003c figure src=\"/images/lighthouse.jpg\" alt=\"/images/lighthouse.jpg\" title=\"Lighthouse (figure)\" \u003e}} The rendered output looks like this: Lighthouse (figure) The HTML looks like this: \u003cfigure\u003e \u003cimg src=\"/images/lighthouse.jpg\" alt=\"/images/lighthouse.jpg\" /\u003e \u003cfigcaption\u003e \u003ch4\u003eLighthouse (figure)\u003c/h4\u003e \u003c/figcaption\u003e \u003c/figure\u003e ","date":"2020-03-04","objectID":"/theme-documentation-built-in-shortcodes/:1:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"2 gist Documentation of gist Example gist input: {{\u003c gist spf13 7896402 \u003e}} The rendered output looks like this: The HTML looks like this: \u003cscript type=\"application/javascript\" src=\"https://gist.github.com/spf13/7896402.js\"\u003e\u003c/script\u003e ","date":"2020-03-04","objectID":"/theme-documentation-built-in-shortcodes/:2:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"3 highlight Documentation of highlight Example highlight input: {{\u003c highlight html \u003e}} \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e {{\u003c /highlight \u003e}} The rendered output looks like this: \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e ","date":"2020-03-04","objectID":"/theme-documentation-built-in-shortcodes/:3:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"4 instagram At the moment, Hugo using deprecated oEmbed-legacy linked API endpoint. Those deprecated API causes an error when Hugo retrieving the data. The newest API has been included in the extended shortcode. ","date":"2020-03-04","objectID":"/theme-documentation-built-in-shortcodes/:4:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"5 param Documentation of param Example param input: {{\u003c param description \u003e}} The rendered output looks like this: Hugo provides multiple built-in shortcodes for author convenience and to keep your markdown content clean. ","date":"2020-03-04","objectID":"/theme-documentation-built-in-shortcodes/:5:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"6 ref and relref Documentation of ref and relref ","date":"2020-03-04","objectID":"/theme-documentation-built-in-shortcodes/:6:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"7 tweet This method was moved with the newest API in the extended shortcode documentation. ","date":"2020-03-04","objectID":"/theme-documentation-built-in-shortcodes/:7:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"8 vimeo Documentation of vimeo Example vimeo input: {{\u003c vimeo 146022717 \u003e}} The rendered output looks like this: ","date":"2020-03-04","objectID":"/theme-documentation-built-in-shortcodes/:8:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"9 youtube Documentation of youtube Example youtube input: {{\u003c youtube w7Ft2ymGmfc \u003e}} The rendered output looks like this: ","date":"2020-03-04","objectID":"/theme-documentation-built-in-shortcodes/:9:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/theme-documentation-built-in-shortcodes/"},{"categories":["Markdown"],"content":"Guide to emoji usage in Hugo and FeelIt.","date":"2019-10-01","objectID":"/emoji-support/","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Emoji can be enabled in a Hugo project in a number of ways. The emojify function can be called directly in templates or Inline Shortcodes. To enable emoji globally, set enableEmoji to true in your site configuration and then you can type emoji shorthand codes directly in content files. These begin and end with a colon and include the code of an emoji: Gone camping! :tent: Be back soon. That is so funny! :joy: The rendered output looks like this: Gone camping! ⛺ Be back soon. That is so funny! 😂 The following cheat sheet is a useful reference for emoji shorthand codes. ","date":"2019-10-01","objectID":"/emoji-support/:0:0","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Smileys \u0026 Emotion ","date":"2019-10-01","objectID":"/emoji-support/:1:0","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Face Smiling icon code icon code 😀 grinning 😃 smiley 😄 smile 😁 grin 😆 laughing satisfied 😅 sweat_smile 🤣 rofl 😂 joy 🙂 slightly_smiling_face 🙃 upside_down_face 😉 wink 😊 blush 😇 innocent ","date":"2019-10-01","objectID":"/emoji-support/:1:1","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Face Affection icon code icon code 😍 heart_eyes 😘 kissing_heart 😗 kissing ☺️ relaxed 😚 kissing_closed_eyes 😙 kissing_smiling_eyes ","date":"2019-10-01","objectID":"/emoji-support/:1:2","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Face Tongue icon code icon code 😋 yum 😛 stuck_out_tongue 😜 stuck_out_tongue_winking_eye 😝 stuck_out_tongue_closed_eyes 🤑 money_mouth_face ","date":"2019-10-01","objectID":"/emoji-support/:1:3","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Face Hand icon code icon code 🤗 hugs 🤔 thinking ","date":"2019-10-01","objectID":"/emoji-support/:1:4","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Face Neutral Skeptical icon code icon code 🤐 zipper_mouth_face 😐 neutral_face 😑 expressionless 😶 no_mouth 😏 smirk 😒 unamused 🙄 roll_eyes 😬 grimacing 🤥 lying_face ","date":"2019-10-01","objectID":"/emoji-support/:1:5","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Face Sleepy icon code icon code 😌 relieved 😔 pensive 😪 sleepy 🤤 drooling_face 😴 sleeping ","date":"2019-10-01","objectID":"/emoji-support/:1:6","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Face Unwell icon code icon code 😷 mask 🤒 face_with_thermometer 🤕 face_with_head_bandage 🤢 nauseated_face 🤧 sneezing_face 😵 dizzy_face ","date":"2019-10-01","objectID":"/emoji-support/:1:7","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Face Hat icon code icon code 🤠 cowboy_hat_face ","date":"2019-10-01","objectID":"/emoji-support/:1:8","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Face Glasses icon code icon code 😎 sunglasses 🤓 nerd_face ","date":"2019-10-01","objectID":"/emoji-support/:1:9","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Face Concerned icon code icon code 😕 confused 😟 worried 🙁 slightly_frowning_face ☹ frowning_face 😮 open_mouth 😯 hushed 😲 astonished 😳 flushed 😦 frowning 😧 anguished 😨 fearful 😰 cold_sweat 😥 disappointed_relieved 😢 cry 😭 sob 😱 scream 😖 confounded 😣 persevere 😞 disappointed 😓 sweat 😩 weary 😫 tired_face ","date":"2019-10-01","objectID":"/emoji-support/:1:10","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Face Negative icon code icon code 😤 triumph 😡 pout rage 😠 angry 😈 smiling_imp 👿 imp 💀 skull ☠️ skull_and_crossbones ","date":"2019-10-01","objectID":"/emoji-support/:1:11","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Face Costume icon code icon code 💩 hankey poop shit 🤡 clown_face 👹 japanese_ogre 👺 japanese_goblin 👻 ghost 👽 alien 👾 space_invader 🤖 robot ","date":"2019-10-01","objectID":"/emoji-support/:1:12","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Cat Face icon code icon code 😺 smiley_cat 😸 smile_cat 😹 joy_cat 😻 heart_eyes_cat 😼 smirk_cat 😽 kissing_cat 🙀 scream_cat 😿 crying_cat_face 😾 pouting_cat ","date":"2019-10-01","objectID":"/emoji-support/:1:13","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Monkey Face icon code icon code 🙈 see_no_evil 🙉 hear_no_evil 🙊 speak_no_evil ","date":"2019-10-01","objectID":"/emoji-support/:1:14","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Emotion icon code icon code 💋 kiss 💌 love_letter 💘 cupid 💝 gift_heart 💖 sparkling_heart 💗 heartpulse 💓 heartbeat 💞 revolving_hearts 💕 two_hearts 💟 heart_decoration ❣️ heavy_heart_exclamation 💔 broken_heart ❤️ heart 💛 yellow_heart 💚 green_heart 💙 blue_heart 💜 purple_heart 🖤 black_heart 💯 100 💢 anger 💥 boom collision 💫 dizzy 💦 sweat_drops 💨 dash 🕳️ hole 💣 bomb 💬 speech_balloon 👁️‍🗨️ eye_speech_bubble 🗯️ right_anger_bubble 💭 thought_balloon 💤 zzz ","date":"2019-10-01","objectID":"/emoji-support/:1:15","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"People \u0026 Body ","date":"2019-10-01","objectID":"/emoji-support/:2:0","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Hand Fingers Open icon code icon code 👋 wave 🤚 raised_back_of_hand 🖐️ raised_hand_with_fingers_splayed ✋ hand raised_hand 🖖 vulcan_salute ","date":"2019-10-01","objectID":"/emoji-support/:2:1","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Hand Fingers Partial icon code icon code 👌 ok_hand ✌️ v 🤞 crossed_fingers 🤘 metal 🤙 call_me_hand ","date":"2019-10-01","objectID":"/emoji-support/:2:2","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Hand Single Finger icon code icon code 👈 point_left 👉 point_right 👆 point_up_2 🖕 fu middle_finger 👇 point_down ☝️ point_up ","date":"2019-10-01","objectID":"/emoji-support/:2:3","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Hand Fingers Closed icon code icon code 👍 +1 thumbsup 👎 -1 thumbsdown ✊ fist fist_raised 👊 facepunch fist_oncoming punch 🤛 fist_left 🤜 fist_right ","date":"2019-10-01","objectID":"/emoji-support/:2:4","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Hands icon code icon code 👏 clap 🙌 raised_hands 👐 open_hands 🤝 handshake 🙏 pray ","date":"2019-10-01","objectID":"/emoji-support/:2:5","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Hand Prop icon code icon code ✍️ writing_hand 💅 nail_care 🤳 selfie ","date":"2019-10-01","objectID":"/emoji-support/:2:6","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Body Parts icon code icon code 💪 muscle 👂 ear 👃 nose 👀 eyes 👁️ eye 👅 tongue 👄 lips ","date":"2019-10-01","objectID":"/emoji-support/:2:7","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Person icon code icon code 👶 baby 👦 boy 👧 girl :blonde_man: blonde_man person_with_blond_hair 👨 man 👩 woman 👱‍♀️ blonde_woman 👴 older_man 👵 older_woman ","date":"2019-10-01","objectID":"/emoji-support/:2:8","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Person Gesture icon code icon code 🙍‍♀️ frowning_woman person_frowning 🙍‍♂️ frowning_man 🙎‍♀️ person_with_pouting_face pouting_woman 🙎‍♂️ pouting_man 🙅‍♀️ ng_woman no_good no_good_woman 🙅‍♂️ ng_man no_good_man 🙆‍♀️ ok_woman 🙆‍♂️ ok_man 💁‍♀️ information_desk_person sassy_woman tipping_hand_woman 💁‍♂️ sassy_man tipping_hand_man 🙋‍♀️ raising_hand raising_hand_woman 🙋‍♂️ raising_hand_man 🙇‍♂️ bow bowing_man 🙇‍♀️ bowing_woman 🤦‍♂️ man_facepalming 🤦‍♀️ woman_facepalming 🤷‍♂️ man_shrugging 🤷‍♀️ woman_shrugging ","date":"2019-10-01","objectID":"/emoji-support/:2:9","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Person Role icon code icon code 👨‍⚕️ man_health_worker 👩‍⚕️ woman_health_worker 👨‍🎓 man_student 👩‍🎓 woman_student 👨‍🏫 man_teacher 👩‍🏫 woman_teacher 👨‍⚖️ man_judge 👩‍⚖️ woman_judge 👨‍🌾 man_farmer 👩‍🌾 woman_farmer 👨‍🍳 man_cook 👩‍🍳 woman_cook 👨‍🔧 man_mechanic 👩‍🔧 woman_mechanic 👨‍🏭 man_factory_worker 👩‍🏭 woman_factory_worker 👨‍💼 man_office_worker 👩‍💼 woman_office_worker 👨‍🔬 man_scientist 👩‍🔬 woman_scientist 👨‍💻 man_technologist 👩‍💻 woman_technologist 👨‍🎤 man_singer 👩‍🎤 woman_singer 👨‍🎨 man_artist 👩‍🎨 woman_artist 👨‍✈️ man_pilot 👩‍✈️ woman_pilot 👨‍🚀 man_astronaut 👩‍🚀 woman_astronaut 👨‍🚒 man_firefighter 👩‍🚒 woman_firefighter 👮‍♂️ cop policeman 👮‍♀️ policewoman 🕵 detective male_detective 🕵️‍♀️ female_detective 💂‍♂️ guardsman 💂‍♀️ guardswoman 👷‍♂️ construction_worker construction_worker_man 👷‍♀️ construction_worker_woman 🤴 prince 👸 princess 👳‍♂️ man_with_turban 👳‍♀️ woman_with_turban 👲 man_with_gua_pi_mao 🤵‍♂️ man_in_tuxedo 👰 bride_with_veil 🤰 pregnant_woman ","date":"2019-10-01","objectID":"/emoji-support/:2:10","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Person Fantasy icon code icon code 👼 angel 🎅 santa 🤶 mrs_claus ","date":"2019-10-01","objectID":"/emoji-support/:2:11","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Person Activity icon code icon code 💆‍♀️ massage massage_woman 💆‍♂️ massage_man 💇‍♀️ haircut haircut_woman 💇‍♂️ haircut_man 🚶‍♂️ walking walking_man 🚶‍♀️ walking_woman 🏃‍♂️ runner running running_man 🏃‍♀️ running_woman 💃 dancer 🕺 man_dancing 🕴️ business_suit_levitating 👯‍♀️ dancers dancing_women 👯‍♂️ dancing_men ","date":"2019-10-01","objectID":"/emoji-support/:2:12","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Person Sport icon code icon code 🤺 person_fencing 🏇 horse_racing ⛷️ skier 🏂 snowboarder 🏌️‍♂️ golfing_man 🏌️‍♀️ golfing_woman 🏄‍♂️ surfer surfing_man 🏄‍♀️ surfing_woman 🚣‍♂️ rowboat rowing_man 🚣‍♀️ rowing_woman 🏊‍♂️ swimmer swimming_man 🏊‍♀️ swimming_woman ⛹️‍♂️ basketball_man ⛹️‍♀️ basketball_woman 🏋️‍♂️ weight_lifting_man 🏋️‍♀️ weight_lifting_woman 🚴‍♂️ bicyclist biking_man 🚴‍♀️ biking_woman 🚵‍♂️ mountain_bicyclist mountain_biking_man 🚵‍♀️ mountain_biking_woman 🤸‍♂️ man_cartwheeling 🤸‍♀️ woman_cartwheeling 🤼‍♂️ men_wrestling 🤼‍♀️ women_wrestling 🤽‍♂️ man_playing_water_polo 🤽‍♀️ woman_playing_water_polo 🤾‍♂️ man_playing_handball 🤾‍♀️ woman_playing_handball 🤹‍♂️ man_juggling 🤹‍♀️ woman_juggling ","date":"2019-10-01","objectID":"/emoji-support/:2:13","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Person Resting icon code icon code 🛀 bath 🛌 sleeping_bed ","date":"2019-10-01","objectID":"/emoji-support/:2:14","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Family icon code icon code 👭 two_women_holding_hands 👫 couple 👬 two_men_holding_hands 👩‍❤️‍💋‍👨 couplekiss_man_woman 👨‍❤️‍💋‍👨 couplekiss_man_man 👩‍❤️‍💋‍👩 couplekiss_woman_woman 👩‍❤️‍👨 couple_with_heart couple_with_heart_woman_man 👨‍❤️‍👨 couple_with_heart_man_man 👩‍❤️‍👩 couple_with_heart_woman_woman 👨‍👩‍👦 family family_man_woman_boy 👨‍👩‍👧 family_man_woman_girl 👨‍👩‍👧‍👦 family_man_woman_girl_boy 👨‍👩‍👦‍👦 family_man_woman_boy_boy 👨‍👩‍👧‍👧 family_man_woman_girl_girl 👨‍👨‍👦 family_man_man_boy 👨‍👨‍👧 family_man_man_girl 👨‍👨‍👧‍👦 family_man_man_girl_boy 👨‍👨‍👦‍👦 family_man_man_boy_boy 👨‍👨‍👧‍👧 family_man_man_girl_girl 👩‍👩‍👦 family_woman_woman_boy 👩‍👩‍👧 family_woman_woman_girl 👩‍👩‍👧‍👦 family_woman_woman_girl_boy 👩‍👩‍👦‍👦 family_woman_woman_boy_boy 👩‍👩‍👧‍👧 family_woman_woman_girl_girl 👨‍👦 family_man_boy 👨‍👦‍👦 family_man_boy_boy 👨‍👧 family_man_girl 👨‍👧‍👦 family_man_girl_boy 👨‍👧‍👧 family_man_girl_girl 👩‍👦 family_woman_boy 👩‍👦‍👦 family_woman_boy_boy 👩‍👧 family_woman_girl 👩‍👧‍👦 family_woman_girl_boy 👩‍👧‍👧 family_woman_girl_girl ","date":"2019-10-01","objectID":"/emoji-support/:2:15","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Person Symbol icon code icon code 🗣 speaking_head 👤 bust_in_silhouette 👥 busts_in_silhouette 👣 footprints ","date":"2019-10-01","objectID":"/emoji-support/:2:16","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Animals \u0026 Nature ","date":"2019-10-01","objectID":"/emoji-support/:3:0","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Animal Mammal icon code icon code 🐵 monkey_face 🐒 monkey 🦍 gorilla 🐶 dog 🐕 dog2 🐩 poodle 🐺 wolf 🦊 fox_face 🐱 cat 🐈 cat2 🦁 lion 🐯 tiger 🐅 tiger2 🐆 leopard 🐴 horse 🐎 racehorse 🦄 unicorn 🦌 deer 🐮 cow 🐂 ox 🐃 water_buffalo 🐄 cow2 🐷 pig 🐖 pig2 🐗 boar 🐽 pig_nose 🐏 ram 🐑 sheep 🐐 goat 🐪 dromedary_camel 🐫 camel 🐘 elephant 🦏 rhinoceros 🐭 mouse 🐁 mouse2 🐀 rat 🐹 hamster 🐰 rabbit 🐇 rabbit2 🐿️ chipmunk 🦇 bat 🐻 bear 🐨 koala 🐼 panda_face 🐾 feet paw_prints ","date":"2019-10-01","objectID":"/emoji-support/:3:1","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Animal Bird icon code icon code 🦃 turkey 🐔 chicken 🐓 rooster 🐣 hatching_chick 🐤 baby_chick 🐥 hatched_chick 🐦 bird 🐧 penguin 🕊 dove 🦅 eagle 🦆 duck 🦉 owl ","date":"2019-10-01","objectID":"/emoji-support/:3:2","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Animal Amphibian icon code icon code 🐸 frog ","date":"2019-10-01","objectID":"/emoji-support/:3:3","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Animal Reptile icon code icon code 🐊 crocodile 🐢 turtle 🦎 lizard 🐍 snake 🐲 dragon_face 🐉 dragon ","date":"2019-10-01","objectID":"/emoji-support/:3:4","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Animal Marine icon code icon code 🐳 whale 🐋 whale2 🐬 dolphin flipper 🐟 fish 🐠 tropical_fish 🐡 blowfish 🦈 shark 🐙 octopus 🐚 shell ","date":"2019-10-01","objectID":"/emoji-support/:3:5","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Animal Bug icon code icon code 🐌 snail 🦋 butterfly 🐛 bug 🐜 ant 🐝 bee honeybee 🪲 beetle 🕷️ spider 🕸️ spider_web 🦂 scorpion ","date":"2019-10-01","objectID":"/emoji-support/:3:6","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Plant Flower icon code icon code 💐 bouquet 🌸 cherry_blossom 💮 white_flower 🏵️ rosette 🌹 rose 🥀 wilted_flower 🌺 hibiscus 🌻 sunflower 🌼 blossom 🌷 tulip ","date":"2019-10-01","objectID":"/emoji-support/:3:7","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Plant Other icon code icon code 🌱 seedling 🌲 evergreen_tree 🌳 deciduous_tree 🌴 palm_tree 🌵 cactus 🌾 ear_of_rice 🌿 herb ☘️ shamrock 🍀 four_leaf_clover 🍁 maple_leaf 🍂 fallen_leaf 🍃 leaves ","date":"2019-10-01","objectID":"/emoji-support/:3:8","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Food \u0026 Drink ","date":"2019-10-01","objectID":"/emoji-support/:4:0","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Food Fruit icon code icon code 🍇 grapes 🍈 melon 🍉 watermelon 🍊 mandarin orange tangerine 🍋 lemon 🍌 banana 🍍 pineapple 🍎 apple 🍏 green_apple 🍐 pear 🍑 peach 🍒 cherries 🍓 strawberry 🥝 kiwi_fruit 🍅 tomato ","date":"2019-10-01","objectID":"/emoji-support/:4:1","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Food Vegetable icon code icon code 🥑 avocado 🍆 eggplant 🥔 potato 🥕 carrot 🌽 corn 🌶️ hot_pepper 🥒 cucumber 🍄 mushroom 🥜 peanuts 🌰 chestnut ","date":"2019-10-01","objectID":"/emoji-support/:4:2","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Food Prepared icon code icon code 🍞 bread 🥐 croissant 🥖 baguette_bread 🥞 pancakes 🧀 cheese 🍖 meat_on_bone 🍗 poultry_leg 🥓 bacon 🍔 hamburger 🍟 fries 🍕 pizza 🌭 hotdog 🌮 taco 🌯 burrito 🥙 stuffed_flatbread 🥚 egg 🍳 fried_egg 🥘 shallow_pan_of_food 🍲 stew 🥗 green_salad 🍿 popcorn ","date":"2019-10-01","objectID":"/emoji-support/:4:3","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Food Asian icon code icon code 🍱 bento 🍘 rice_cracker 🍙 rice_ball 🍚 rice 🍛 curry 🍜 ramen 🍝 spaghetti 🍠 sweet_potato 🍢 oden 🍣 sushi 🍤 fried_shrimp 🍥 fish_cake 🍡 dango ","date":"2019-10-01","objectID":"/emoji-support/:4:4","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Food Marine icon code icon code 🦀 crab 🦐 shrimp 🦑 squid ","date":"2019-10-01","objectID":"/emoji-support/:4:5","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Food Sweet icon code icon code 🍦 icecream 🍧 shaved_ice 🍨 ice_cream 🍩 doughnut 🍪 cookie 🎂 birthday 🍰 cake 🍫 chocolate_bar 🍬 candy 🍭 lollipop 🍮 custard 🍯 honey_pot ","date":"2019-10-01","objectID":"/emoji-support/:4:6","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Drink icon code icon code 🍼 baby_bottle 🥛 milk_glass ☕ coffee 🍵 tea 🍶 sake 🍾 champagne 🍷 wine_glass 🍸 cocktail 🍹 tropical_drink 🍺 beer 🍻 beers 🥂 clinking_glasses 🥃 tumbler_glass ","date":"2019-10-01","objectID":"/emoji-support/:4:7","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Dishware icon code icon code 🍽️ plate_with_cutlery 🍴 fork_and_knife 🥄 spoon 🔪 hocho knife 🏺 amphora ","date":"2019-10-01","objectID":"/emoji-support/:4:8","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Travel \u0026 Places ","date":"2019-10-01","objectID":"/emoji-support/:5:0","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Place Map icon code icon code 🌍 earth_africa 🌎 earth_americas 🌏 earth_asia 🌐 globe_with_meridians 🗺️ world_map 🗾 japan ","date":"2019-10-01","objectID":"/emoji-support/:5:1","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Place Geographic icon code icon code 🏔 mountain_snow ⛰️ mountain 🌋 volcano 🗻 mount_fuji 🏕️ camping ⛱ beach_umbrella 🏜️ desert 🏝️ desert_island 🏞️ national_park ","date":"2019-10-01","objectID":"/emoji-support/:5:2","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Place Building icon code icon code 🏟️ stadium 🏛️ classical_building 🏗️ building_construction 🏘 houses 🏚 derelict_house 🏠 house 🏡 house_with_garden 🏢 office 🏣 post_office 🏤 european_post_office 🏥 hospital 🏦 bank 🏨 hotel 🏩 love_hotel 🏪 convenience_store 🏫 school 🏬 department_store 🏭 factory 🏯 japanese_castle 🏰 european_castle 💒 wedding 🗼 tokyo_tower 🗽 statue_of_liberty ","date":"2019-10-01","objectID":"/emoji-support/:5:3","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Place Religious icon code icon code ⛪ church 🕌 mosque 🕍 synagogue ⛩️ shinto_shrine 🕋 kaaba ","date":"2019-10-01","objectID":"/emoji-support/:5:4","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Place Other icon code icon code ⛲ fountain ⛺ tent 🌁 foggy 🌃 night_with_stars 🏙️ cityscape 🌄 sunrise_over_mountains 🌅 sunrise 🌆 city_sunset 🌇 city_sunrise 🌉 bridge_at_night ♨️ hotsprings 🎠 carousel_horse 🎡 ferris_wheel 🎢 roller_coaster 💈 barber 🎪 circus_tent ","date":"2019-10-01","objectID":"/emoji-support/:5:5","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Transport Ground icon code icon code 🚂 steam_locomotive 🚃 railway_car 🚄 bullettrain_side 🚅 bullettrain_front 🚆 train2 🚇 metro 🚈 light_rail 🚉 station 🚊 tram 🚝 monorail 🚞 mountain_railway 🚋 train 🚌 bus 🚍 oncoming_bus 🚎 trolleybus 🚐 minibus 🚑 ambulance 🚒 fire_engine 🚓 police_car 🚔 oncoming_police_car 🚕 taxi 🚖 oncoming_taxi 🚗 car red_car 🚘 oncoming_automobile 🚙 blue_car 🚚 truck 🚛 articulated_lorry 🚜 tractor 🏎️ racing_car 🏍 motorcycle 🛵 motor_scooter 🚲 bike 🛴 kick_scooter 🚏 busstop 🛣️ motorway 🛤️ railway_track 🛢️ oil_drum ⛽ fuelpump 🚨 rotating_light 🚥 traffic_light 🚦 vertical_traffic_light 🛑 stop_sign 🚧 construction ","date":"2019-10-01","objectID":"/emoji-support/:5:6","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Transport Water icon code icon code ⚓ anchor ⛵ boat sailboat 🛶 canoe 🚤 speedboat 🛳️ passenger_ship ⛴️ ferry 🛥️ motor_boat 🚢 ship ","date":"2019-10-01","objectID":"/emoji-support/:5:7","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Transport Air icon code icon code ✈️ airplane 🛩️ small_airplane 🛫 flight_departure 🛬 flight_arrival 💺 seat 🚁 helicopter 🚟 suspension_railway 🚠 mountain_cableway 🚡 aerial_tramway 🛰️ artificial_satellite 🚀 rocket ","date":"2019-10-01","objectID":"/emoji-support/:5:8","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Hotel icon code icon code 🛎️ bellhop_bell ","date":"2019-10-01","objectID":"/emoji-support/:5:9","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Time icon code icon code ⌛ hourglass ⏳ hourglass_flowing_sand ⌚ watch ⏰ alarm_clock ⏱️ stopwatch ⏲️ timer_clock 🕰️ mantelpiece_clock 🕛 clock12 🕧 clock1230 🕐 clock1 🕜 clock130 🕑 clock2 🕝 clock230 🕒 clock3 🕞 clock330 🕓 clock4 🕟 clock430 🕔 clock5 🕠 clock530 🕕 clock6 🕡 clock630 🕖 clock7 🕢 clock730 🕗 clock8 🕣 clock830 🕘 clock9 🕤 clock930 🕙 clock10 🕥 clock1030 🕚 clock11 🕦 clock1130 ","date":"2019-10-01","objectID":"/emoji-support/:5:10","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Sky \u0026 Weather icon code icon code 🌑 new_moon 🌒 waxing_crescent_moon 🌓 first_quarter_moon 🌔 moon waxing_gibbous_moon 🌕 full_moon 🌖 waning_gibbous_moon 🌗 last_quarter_moon 🌘 waning_crescent_moon 🌙 crescent_moon 🌚 new_moon_with_face 🌛 first_quarter_moon_with_face 🌜 last_quarter_moon_with_face 🌡️ thermometer ☀️ sunny 🌝 full_moon_with_face 🌞 sun_with_face ⭐ star 🌟 star2 🌠 stars 🌌 milky_way ☁️ cloud ⛅ partly_sunny ⛈ cloud_with_lightning_and_rain 🌤 sun_behind_small_cloud 🌥 sun_behind_large_cloud 🌦 sun_behind_rain_cloud 🌧 cloud_with_rain 🌨 cloud_with_snow 🌩 cloud_with_lightning 🌪️ tornado 🌫️ fog 🌬 wind_face 🌀 cyclone 🌈 rainbow 🌂 closed_umbrella ☂️ open_umbrella ☂️ umbrella ⛱️ parasol_on_ground ⚡ zap ❄️ snowflake ☃️ snowman_with_snow ☃️ snowman ☄️ comet 🔥 fire 💧 droplet 🌊 ocean ","date":"2019-10-01","objectID":"/emoji-support/:5:11","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Activities ","date":"2019-10-01","objectID":"/emoji-support/:6:0","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Event icon code icon code 🎃 jack_o_lantern 🎄 christmas_tree 🎆 fireworks 🎇 sparkler ✨ sparkles 🎈 balloon 🎉 tada 🎊 confetti_ball 🎋 tanabata_tree 🎍 bamboo 🎎 dolls 🎏 flags 🎐 wind_chime 🎑 rice_scene 🎀 ribbon 🎁 gift 🎗️ reminder_ribbon 🎟 tickets 🎫 ticket ","date":"2019-10-01","objectID":"/emoji-support/:6:1","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Award Medal icon code icon code 🎖️ medal_military 🏆 trophy 🏅 medal_sports 🥇 1st_place_medal 🥈 2nd_place_medal 🥉 3rd_place_medal ","date":"2019-10-01","objectID":"/emoji-support/:6:2","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Sport icon code icon code ⚽ soccer ⚾ baseball 🏀 basketball 🏐 volleyball 🏈 football 🏉 rugby_football 🎾 tennis 🎳 bowling 🦗 cricket 🏑 field_hockey 🏒 ice_hockey 🏓 ping_pong 🏸 badminton 🥊 boxing_glove 🥋 martial_arts_uniform 🥅 goal_net ⛳ golf ⛸️ ice_skate 🎣 fishing_pole_and_fish 🎽 running_shirt_with_sash 🎿 ski ","date":"2019-10-01","objectID":"/emoji-support/:6:3","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Game icon code icon code 🎯 dart 🎱 8ball 🔮 crystal_ball 🎮 video_game 🕹️ joystick 🎰 slot_machine 🎲 game_die ♠️ spades ♥️ hearts ♦️ diamonds ♣️ clubs 🃏 black_joker 🀄 mahjong 🎴 flower_playing_cards ","date":"2019-10-01","objectID":"/emoji-support/:6:4","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Arts \u0026 Crafts icon code icon code 🎭 performing_arts 🖼 framed_picture 🎨 art ","date":"2019-10-01","objectID":"/emoji-support/:6:5","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Objects ","date":"2019-10-01","objectID":"/emoji-support/:7:0","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Clothing icon code icon code 👓 eyeglasses 🕶️ dark_sunglasses 👔 necktie 👕 shirt tshirt 👖 jeans 👗 dress 👘 kimono 👙 bikini 👚 womans_clothes 👛 purse 👜 handbag 👝 pouch 🛍️ shopping 🎒 school_satchel 👞 mans_shoe shoe 👟 athletic_shoe 👠 high_heel 👡 sandal 👢 boot 👑 crown 👒 womans_hat 🎩 tophat 🎓 mortar_board ⛑️ rescue_worker_helmet 📿 prayer_beads 💄 lipstick 💍 ring 💎 gem ","date":"2019-10-01","objectID":"/emoji-support/:7:1","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Sound icon code icon code 🔇 mute 🔈 speaker 🔉 sound 🔊 loud_sound 📢 loudspeaker 📣 mega 📯 postal_horn 🔔 bell 🔕 no_bell ","date":"2019-10-01","objectID":"/emoji-support/:7:2","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Music icon code icon code 🎼 musical_score 🎵 musical_note 🎶 notes 🎙️ studio_microphone 🎚️ level_slider 🎛️ control_knobs 🎤 microphone 🎧 headphones 📻 radio ","date":"2019-10-01","objectID":"/emoji-support/:7:3","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Musical Instrument icon code icon code 🎷 saxophone 🎸 guitar 🎹 musical_keyboard 🎺 trumpet 🎻 violin 🥁 drum ","date":"2019-10-01","objectID":"/emoji-support/:7:4","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Phone icon code icon code 📱 iphone 📲 calling ☎️ phone telephone 📞 telephone_receiver 📟 pager 📠 fax ","date":"2019-10-01","objectID":"/emoji-support/:7:5","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Computer icon code icon code 🔋 battery 🔌 electric_plug 💻 computer 🖥️ desktop_computer 🖨️ printer ⌨️ keyboard 🖱 computer_mouse 🖲️ trackball 💽 minidisc 💾 floppy_disk 💿 cd 📀 dvd ","date":"2019-10-01","objectID":"/emoji-support/:7:6","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Light \u0026 Video icon code icon code 🎥 movie_camera 🎞️ film_strip 📽️ film_projector 🎬 clapper 📺 tv 📷 camera 📸 camera_flash 📹 video_camera 📼 vhs 🔍 mag 🔎 mag_right 🕯️ candle 💡 bulb 🔦 flashlight 🏮 izakaya_lantern lantern ","date":"2019-10-01","objectID":"/emoji-support/:7:7","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Book Paper icon code icon code 📔 notebook_with_decorative_cover 📕 closed_book 📖 book open_book 📗 green_book 📘 blue_book 📙 orange_book 📚 books 📓 notebook 📒 ledger 📃 page_with_curl 📜 scroll 📄 page_facing_up 📰 newspaper 🗞️ newspaper_roll 📑 bookmark_tabs 🔖 bookmark 🏷️ label ","date":"2019-10-01","objectID":"/emoji-support/:7:8","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Money icon code icon code 💰 moneybag 💴 yen 💵 dollar 💶 euro 💷 pound 💸 money_with_wings 💳 credit_card 💹 chart ","date":"2019-10-01","objectID":"/emoji-support/:7:9","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Mail icon code icon code ✉️ email envelope 📧 📧 📨 incoming_envelope 📩 envelope_with_arrow 📤 outbox_tray 📥 inbox_tray 📦 package 📫 mailbox 📪 mailbox_closed 📬 mailbox_with_mail 📭 mailbox_with_no_mail 📮 postbox 🗳 ballot_box ","date":"2019-10-01","objectID":"/emoji-support/:7:10","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Writing icon code icon code ✏️ pencil2 ✒️ black_nib 🖋 fountain_pen 🖊 pen 🖌 paintbrush 🖍 crayon 📝 memo pencil ","date":"2019-10-01","objectID":"/emoji-support/:7:11","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Office icon code icon code 💼 briefcase 📁 file_folder 📂 open_file_folder 🗂️ card_index_dividers 📅 date 📆 calendar 🗒 spiral_notepad 🗓 spiral_calendar 📇 card_index 📈 chart_with_upwards_trend 📉 chart_with_downwards_trend 📊 bar_chart 📋 clipboard 📌 pushpin 📍 round_pushpin 📎 paperclip 🖇 paperclips 📏 straight_ruler 📐 triangular_ruler ✂️ scissors 🗃️ card_file_box 🗄️ file_cabinet 🗑️ wastebasket ","date":"2019-10-01","objectID":"/emoji-support/:7:12","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Lock icon code icon code 🔒 lock 🔓 unlock 🔏 lock_with_ink_pen 🔐 closed_lock_with_key 🔑 key 🗝️ old_key ","date":"2019-10-01","objectID":"/emoji-support/:7:13","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Tool icon code icon code 🔨 hammer ⛏️ pick ⚒️ hammer_and_pick 🛠️ hammer_and_wrench 🗡 dagger ⚔️ crossed_swords 🔫 gun 🏹 bow_and_arrow 🛡️ shield 🔧 wrench 🔩 nut_and_bolt ⚙️ gear 🗜 clamp ⚖ balance_scale 🔗 link ⛓️ chains ","date":"2019-10-01","objectID":"/emoji-support/:7:14","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Science icon code icon code ⚗️ alembic 🔬 microscope 🔭 telescope 🛰️ satellite ","date":"2019-10-01","objectID":"/emoji-support/:7:15","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Medical icon code icon code 💉 syringe 💊 pill ","date":"2019-10-01","objectID":"/emoji-support/:7:16","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Household icon code icon code 🚪 door 🛏️ bed 🛋️ couch_and_lamp 🚽 toilet 🚿 shower 🛁 bathtub 🛒 shopping_cart ","date":"2019-10-01","objectID":"/emoji-support/:7:17","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Other Object icon code icon code 🚬 smoking ⚰️ coffin ⚱️ funeral_urn 🗿 moyai ","date":"2019-10-01","objectID":"/emoji-support/:7:18","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Symbols ","date":"2019-10-01","objectID":"/emoji-support/:8:0","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Transport Sign icon code icon code 🏧 atm 🚮 put_litter_in_its_place 🚰 potable_water ♿ wheelchair 🚹 mens 🚺 womens 🚻 restroom 🚼 baby_symbol 🚾 wc 🛂 passport_control 🛃 customs 🛄 baggage_claim 🛅 left_luggage ","date":"2019-10-01","objectID":"/emoji-support/:8:1","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Warning icon code icon code ⚠️ warning 🚸 children_crossing ⛔ no_entry 🚫 no_entry_sign 🚳 no_bicycles 🚭 no_smoking 🚯 do_not_litter 🚱 🚱 🚷 no_pedestrians 📵 no_mobile_phones 🔞 underage ☢ radioactive ☣ biohazard ","date":"2019-10-01","objectID":"/emoji-support/:8:2","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Arrow icon code icon code ⬆️ arrow_up ↗️ arrow_upper_right ➡️ arrow_right ↘️ arrow_lower_right ⬇️ arrow_down ↙️ arrow_lower_left ⬅️ arrow_left ↖️ arrow_upper_left ↕️ arrow_up_down ↔️ left_right_arrow ↩️ leftwards_arrow_with_hook ↪️ arrow_right_hook ⤴️ arrow_heading_up ⤵️ arrow_heading_down 🔃 arrows_clockwise 🔄 arrows_counterclockwise 🔙 back 🔚 end 🔛 on 🔜 soon 🔝 top ","date":"2019-10-01","objectID":"/emoji-support/:8:3","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Religion icon code icon code 🛐 place_of_worship ⚛️ atom_symbol 🕉 om ✡️ star_of_david ☸️ wheel_of_dharma ☯️ yin_yang ✝️ latin_cross ☦️ orthodox_cross ☪️ star_and_crescent ☮️ peace_symbol 🕎 menorah 🔯 six_pointed_star ","date":"2019-10-01","objectID":"/emoji-support/:8:4","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Zodiac icon code icon code ♈ aries ♉ taurus ♊ gemini ♋ cancer ♌ leo ♍ virgo ♎ libra ♏ scorpius ♐ sagittarius ♑ capricorn ♒ aquarius ♓ pisces ⛎ ophiuchus ","date":"2019-10-01","objectID":"/emoji-support/:8:5","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Av Symbol icon code icon code 🔀 twisted_rightwards_arrows 🔁 repeat 🔂 repeat_one ▶️ arrow_forward ⏩ fast_forward ⏭ next_track_button ⏯ play_or_pause_button ◀️ arrow_backward ⏪ rewind ⏮️ previous_track_button 🔼 arrow_up_small ⏫ arrow_double_up 🔽 arrow_down_small ⏬ arrow_double_down ⏸ pause_button ⏹ stop_button ⏺ record_button 🎦 cinema 🔅 low_brightness 🔆 high_brightness 📶 signal_strength 📳 vibration_mode 📴 mobile_phone_off ","date":"2019-10-01","objectID":"/emoji-support/:8:6","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Math icon code icon code ✖️ heavy_multiplication_x ➕ heavy_plus_sign ➖ heavy_minus_sign ➗ heavy_division_sign ","date":"2019-10-01","objectID":"/emoji-support/:8:7","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Punctuation icon code icon code ‼️ bangbang ⁉️ interrobang ❓ question ❔ grey_question ❕ grey_exclamation ❗ exclamation heavy_exclamation_mark 〰️ wavy_dash ","date":"2019-10-01","objectID":"/emoji-support/:8:8","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Currency icon code icon code 💱 currency_exchange 💲 heavy_dollar_sign ","date":"2019-10-01","objectID":"/emoji-support/:8:9","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Keycap icon code icon code #️⃣ hash *️⃣ asterisk 0️⃣ zero 1️⃣ one 2️⃣ two 3️⃣ three 4️⃣ four 5️⃣ five 6️⃣ six 7️⃣ seven 8️⃣ eight 9️⃣ nine 🔟 keycap_ten ","date":"2019-10-01","objectID":"/emoji-support/:8:10","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Alphabet icon code icon code 🔠 capital_abcd 🔡 abcd 🔢 1234 🔣 symbols 🔤 abc 🅰️ a 🆎 ab 🅱️ b 🆑 cl 🆒 cool 🆓 free ℹ️ information_source 🆔 id ⓜ️ m 🆕 new 🆖 ng 🅾️ o2 🆗 ok 🅿️ parking 🆘 sos 🆙 up 🆚 vs 🈁 koko 🈂️ sa 🈷️ u6708 🈶 u6709 🈯 u6307 🉐 ideograph_advantage 🈹 u5272 🈚 u7121 🈲 u7981 🉑 accept 🈸 u7533 🈴 u5408 🈳 u7a7a ㊗️ congratulations ㊙️ secret 🈺 u55b6 🈵 u6e80 ","date":"2019-10-01","objectID":"/emoji-support/:8:11","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Geometric icon code icon code 🔴 red_circle 🔵 large_blue_circle ⚫ black_circle ⚪ white_circle ⬛ black_large_square ⬜ white_large_square ◼️ black_medium_square ◻️ white_medium_square ◾ black_medium_small_square ◽ white_medium_small_square ▪️ black_small_square ▫️ white_small_square 🔶 large_orange_diamond 🔷 large_blue_diamond 🔸 small_orange_diamond 🔹 small_blue_diamond 🔺 small_red_triangle 🔻 small_red_triangle_down 💠 diamond_shape_with_a_dot_inside 🔘 radio_button 🔳 white_square_button 🔲 black_square_button ","date":"2019-10-01","objectID":"/emoji-support/:8:12","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Other Symbol icon code icon code ♻️ recycle ⚜️ fleur_de_lis 🔱 trident 📛 name_badge 🔰 beginner ⭕ o ✅ white_check_mark ☑️ ballot_box_with_check ✔️ heavy_check_mark ❌ x ❎ negative_squared_cross_mark ➰ curly_loop ➿ loop 〽️ part_alternation_mark ✳️ eight_spoked_asterisk ✴️ eight_pointed_black_star ❇️ sparkle ©️ copyright ®️ registered ™️ tm ","date":"2019-10-01","objectID":"/emoji-support/:8:13","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Flags ","date":"2019-10-01","objectID":"/emoji-support/:9:0","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Common Flags icon code icon code 🏁 checkered_flag 🚩 triangular_flag_on_post 🎌 crossed_flags 🏴 black_flag 🏳 white_flag 🏳️‍🌈 rainbow_flag ","date":"2019-10-01","objectID":"/emoji-support/:9:1","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Markdown"],"content":"Country and Region Flags icon code icon code 🇦🇩 andorra 🇦🇪 united_arab_emirates 🇦🇫 afghanistan 🇦🇬 antigua_barbuda 🇦🇮 anguilla 🇦🇱 albania 🇦🇲 armenia 🇦🇴 angola 🇦🇶 antarctica 🇦🇷 argentina 🇦🇸 american_samoa 🇦🇹 austria 🇦🇺 australia 🇦🇼 aruba 🇦🇽 aland_islands 🇦🇿 azerbaijan 🇧🇦 bosnia_herzegovina 🇧🇧 barbados 🇧🇩 bangladesh 🇧🇪 belgium 🇧🇫 burkina_faso 🇧🇬 bulgaria 🇧🇭 bahrain 🇧🇮 burundi 🇧🇯 benin 🇧🇱 st_barthelemy 🇧🇲 bermuda 🇧🇳 brunei 🇧🇴 bolivia 🇧🇶 caribbean_netherlands 🇧🇷 brazil 🇧🇸 bahamas 🇧🇹 bhutan 🇧🇼 botswana 🇧🇾 belarus 🇧🇿 belize 🇨🇦 canada 🇨🇨 cocos_islands 🇨🇩 congo_kinshasa 🇨🇫 central_african_republic 🇨🇬 congo_brazzaville 🇨🇭 switzerland 🇨🇮 cote_divoire 🇨🇰 cook_islands 🇨🇱 chile 🇨🇲 cameroon 🇨🇳 cn 🇨🇴 colombia 🇨🇷 costa_rica 🇨🇺 cuba 🇨🇻 cape_verde 🇨🇼 curacao 🇨🇽 christmas_island 🇨🇾 cyprus 🇨🇿 czech_republic 🇩🇪 de 🇩🇯 djibouti 🇩🇰 denmark 🇩🇲 dominica 🇩🇴 dominican_republic 🇩🇿 algeria 🇪🇨 ecuador 🇪🇪 estonia 🇪🇬 egypt 🇪🇭 western_sahara 🇪🇷 eritrea 🇪🇸 es 🇪🇹 ethiopia 🇪🇺 eu european_union 🇫🇮 finland 🇫🇯 fiji 🇫🇰 falkland_islands 🇫🇲 micronesia 🇫🇴 faroe_islands 🇫🇷 fr 🇬🇦 gabon 🇬🇧 gb uk 🇬🇩 grenada 🇬🇪 georgia 🇬🇫 french_guiana 🇬🇬 guernsey 🇬🇭 ghana 🇬🇮 gibraltar 🇬🇱 greenland 🇬🇲 gambia 🇬🇳 guinea 🇬🇵 guadeloupe 🇬🇶 equatorial_guinea 🇬🇷 greece 🇬🇸 south_georgia_south_sandwich_islands 🇬🇹 guatemala 🇬🇺 guam 🇬🇼 guinea_bissau 🇬🇾 guyana 🇭🇰 hong_kong 🇭🇳 honduras 🇭🇷 croatia 🇭🇹 haiti 🇭🇺 hungary 🇮🇨 canary_islands 🇮🇩 indonesia 🇮🇪 ireland 🇮🇱 israel 🇮🇲 isle_of_man 🇮🇳 india 🇮🇴 british_indian_ocean_territory 🇮🇶 iraq 🇮🇷 iran 🇮🇸 iceland 🇮🇹 it 🇯🇪 jersey 🇯🇲 jamaica 🇯🇴 jordan 🇯🇵 jp 🇰🇪 kenya 🇰🇬 kyrgyzstan 🇰🇭 cambodia 🇰🇮 kiribati 🇰🇲 comoros 🇰🇳 st_kitts_nevis 🇰🇵 north_korea 🇰🇷 kr 🇰🇼 kuwait 🇰🇾 cayman_islands 🇰🇿 kazakhstan 🇱🇦 laos 🇱🇧 lebanon 🇱🇨 st_lucia 🇱🇮 liechtenstein 🇱🇰 sri_lanka 🇱🇷 liberia 🇱🇸 lesotho 🇱🇹 lithuania 🇱🇺 luxembourg 🇱🇻 latvia 🇱🇾 libya 🇲🇦 morocco 🇲🇨 monaco 🇲🇩 moldova 🇲🇪 montenegro 🇲🇬 madagascar 🇲🇭 marshall_islands 🇲🇰 macedonia 🇲🇱 mali 🇲🇲 myanmar 🇲🇳 mongolia 🇲🇴 macau 🇲🇵 northern_mariana_islands 🇲🇶 martinique 🇲🇷 mauritania 🇲🇸 montserrat 🇲🇹 malta 🇲🇺 mauritius 🇲🇻 maldives 🇲🇼 malawi 🇲🇽 mexico 🇲🇾 malaysia 🇲🇿 mozambique 🇳🇦 namibia 🇳🇨 new_caledonia 🇳🇪 niger 🇳🇫 norfolk_island 🇳🇬 nigeria 🇳🇮 nicaragua 🇳🇱 netherlands 🇳🇴 norway 🇳🇵 nepal 🇳🇷 nauru 🇳🇺 niue 🇳🇿 new_zealand 🇴🇲 oman 🇵🇦 panama 🇵🇪 peru 🇵🇫 french_polynesia 🇵🇬 papua_new_guinea 🇵🇭 philippines 🇵🇰 pakistan 🇵🇱 poland 🇵🇲 st_pierre_miquelon 🇵🇳 pitcairn_islands 🇵🇷 puerto_rico 🇵🇸 palestinian_territories 🇵🇹 portugal 🇵🇼 palau 🇵🇾 paraguay 🇶🇦 qatar 🇷🇪 reunion 🇷🇴 romania 🇷🇸 serbia 🇷🇺 ru 🇷🇼 rwanda 🇸🇦 saudi_arabia 🇸🇧 solomon_islands 🇸🇨 seychelles 🇸🇩 sudan 🇸🇪 sweden 🇸🇬 singapore 🇸🇭 st_helena 🇸🇮 slovenia 🇸🇰 slovakia 🇸🇱 sierra_leone 🇸🇲 san_marino 🇸🇳 senegal 🇸🇴 somalia 🇸🇷 suriname 🇸🇸 south_sudan 🇸🇹 sao_tome_principe 🇸🇻 el_salvador 🇸🇽 sint_maarten 🇸🇾 syria 🇸🇿 swaziland 🇹🇨 turks_caicos_islands 🇹🇩 chad 🇹🇫 french_southern_territories 🇹🇬 togo 🇹🇭 thailand 🇹🇯 tajikistan 🇹🇰 tokelau 🇹🇱 timor_leste 🇹🇲 turkmenistan 🇹🇳 tunisia 🇹🇴 tonga 🇹🇷 tr 🇹🇹 trinidad_tobago 🇹🇻 tuvalu 🇹🇼 taiwan 🇹🇿 tanzania 🇺🇦 ukraine 🇺🇬 uganda 🇺🇸 us 🇺🇾 uruguay 🇺🇿 uzbekistan 🇻🇦 vatican_city 🇻🇨 st_vincent_grenadines 🇻🇪 venezuela 🇻🇬 british_virgin_islands 🇻🇮 us_virgin_islands 🇻🇳 vietnam 🇻🇺 vanuatu 🇼🇫 wallis_futuna 🇼🇸 samoa 🇽🇰 kosovo 🇾🇪 yemen 🇾🇹 mayotte 🇿🇦 south_africa 🇿🇲 zambia 🇿🇼 zimbabwe ","date":"2019-10-01","objectID":"/emoji-support/:9:2","tags":["emoji"],"title":"Emoji Support","uri":"/emoji-support/"},{"categories":["Cloud Native","Design Principles"],"content":"Azure Reference Architectures Microsoft reference architectures ","date":"2022-03-12","objectID":"/cloud-native/:0:1","tags":["Cloud","Cloud Native","12 Factor App","Cloud App"],"title":"12 Factor Principles of Cloudnative Apps ","uri":"/cloud-native/"},{"categories":["Cloud Native","Design Principles"],"content":"12-factor app principles Codebase: One codebase tracked in revision control, many deploys. Dependencies: Explicitly declare and isolate dependencies. Config: Store config in the environment. Backing services: Treat backing services as attached resources. Build, release, and Run: Strictly separate build and run stages. Processes: Execute the app as one or more stateless processes. Port binding: Export services via port binding. Concurrency: Scale out via the process model. Disposability: Maximize robustness with fast startup and graceful shutdown. Dev/prod parity: Keep development, staging, and production as similar as possible. Logs: Treat logs as event streams. Admin processes: Run admin/management tasks as one-off processes. Codebase Every application should have its own codebase. Multiple codebases for multiple versions must be avoided. Multiple apps sharing the same code are a violation of the twelve-factor In Microservices, every service should have its own codebase. Having an independent codebase helps you to easy CI/CD process for your applications. If you need to share you need to build a library and make it as a dependency and manage through package repository like maven, nuget Dependencies Explicitly Declare and Isolate the Dependencies A twelve-factor app never relies on implicit existence of system-wide packages Consider the dependencies from the operating system/ execution environment perspective as well. Microservices: All the application packages will be managed through package managers like sbt, maven. In non-containerized environments, you can go for configuration management tools like chef, ansible, etc. to install system-level dependencies. For a containerized environment, you can go for dockerfile. Config Do not hardcode configuration values as constants in the codebase. This is a violation of 12-factor app principles. It advocates the strict separation between the code and configurations. The code must be the same irrespective of where the application being deployed. Backing Services Treat Backing Resources as Attached Resources Database, Message Brokers, Cache, Logging, any other external systems that the app communicates is treated as Backing service. 12-factor app can automatically swap the application from one provider to another without making any further modifications to the code base. Only configuration change should be able to take care of it. In a microservice ecosystem, anything external to service is treated as attached resource. The resource can be swapped at any given point of time without impacting the service. Build, Release, and Run Strictly Separate Build and Run Stages Build stage: transform the code into an executable bundle/ build package. Release stage: get the build package from the build stage and combines with the configurations of the deployment environment and make your application ready to run. Run stage: It is like running your app in the execution environment. The application must have a strict separation between the build, release, and run stages. Let us understand each stage in more detail. Microservices: You can use CI/CD tools to automate the builds and deployment process. Docker images make it easy to separate the build, release, and run stages more efficiently. Processes Execute the App as One or More Stateless Processes Application should store the state in the database instead of in memory of the process. Avoid using sticky sessions For storing session information, use any cache provider. Port Binding Export Services Via Port Binding The twelve-factor app is completely self-contained and doesn’t rely on runtime injection of a webserver into the execution environment to create a web-facing service. The web app exports HTTP as a service by binding to a port, and listening to requests coming in on that port. Concurrency Scale Out Via the Process Model Consider running your application as multiple processes/instances instead of running in one large system (Horizontal scalin","date":"2022-03-12","objectID":"/cloud-native/:0:2","tags":["Cloud","Cloud Native","12 Factor App","Cloud App"],"title":"12 Factor Principles of Cloudnative Apps ","uri":"/cloud-native/"},{"categories":["Cloud Native","Design Principles"],"content":"References: https://12factor.net/ https://www.nginx.com/blog/microservices-reference-architecture-nginx-twelve-factor-app/ https://blog.scottlogic.com/2017/07/17/successful-microservices-with-12factor-app.html https://dzone.com/articles/12-factor-app-principles-and-cloud-native-microser https://tyk.io/blog/being-cloud-native-12-factor-app-design/ ","date":"2022-03-12","objectID":"/cloud-native/:0:3","tags":["Cloud","Cloud Native","12 Factor App","Cloud App"],"title":"12 Factor Principles of Cloudnative Apps ","uri":"/cloud-native/"},{"categories":["System Design","Books","DDIA"],"content":"We call an application data-intensive if data is its primary challenge—the quantity of data, the complexity of data, or the speed at which it is changing—as opposed to compute-intensive, where CPU cycles are the bottleneck. ","date":"2022-03-12","objectID":"/ddia-book/:0:0","tags":["DDIA","System Design"],"title":"Design Data Intensive Applications","uri":"/ddia-book/"},{"categories":["System Design","Books","DDIA"],"content":"Chapter 3 - Storage \u0026 Retrival Log is used in the more general sense: an append-only sequence of records. It doesn’t have to be human-readable; it might be binary and intended only for other programs to read. Hash Indexes ","date":"2022-03-12","objectID":"/ddia-book/:1:0","tags":["DDIA","System Design"],"title":"Design Data Intensive Applications","uri":"/ddia-book/"},{"categories":["System Design","Books","DDIA"],"content":"LSM Trees Write is fast Read is slow High write throughput due to (Write amplification) Compressed better Lower s; ","date":"2022-03-12","objectID":"/ddia-book/:1:1","tags":["DDIA","System Design"],"title":"Design Data Intensive Applications","uri":"/ddia-book/"},{"categories":["System Design","Books","DDIA"],"content":"B Tree Head log Entire page to be written always Leaves space ( unfragemented) ","date":"2022-03-12","objectID":"/ddia-book/:2:0","tags":["DDIA","System Design"],"title":"Design Data Intensive Applications","uri":"/ddia-book/"},{"categories":["Azure","Cloud"],"content":"Azure Core Concepts IAAS PAAS FAAS ","date":"2022-03-09","objectID":"/azure/:0:1","tags":["Cloud","Azure","Exam","AZ-104"],"title":"Azure","uri":"/azure/"},{"categories":["Azure","Cloud"],"content":"Azure Compute Azure compute is an on-demand computing services for running cloud based applications. Azure Virtual Machines Azure Container Instances Azure App Service Azure Functions (or serverless computing) Azure Virtual Machines (VMs) Virtual Machines are virtual computer systems. They include Virtual processor Memory Storage Networking resources VMs host an opertaing system, and we can install and run softwares on the VMs just like a physical computer. VMs provide IaaS (infrastructure as a service). Storage OS Disk Data Disk Temporary Disk (instance) Unmanaged vs managed Operating System Windows Linux Connections to VMs RDP SSH ","date":"2022-03-09","objectID":"/azure/:0:2","tags":["Cloud","Azure","Exam","AZ-104"],"title":"Azure","uri":"/azure/"},{"categories":["Azure","Cloud"],"content":"Region OS Type (OS Only) Tier (Standered) Category ( General Purpose | Compute Optimized) Instance Series Instance Number of VM Virtual machine scale sets Virtual machine scale sets are like image of an operating system ","date":"2022-03-09","objectID":"/azure/:0:3","tags":["Cloud","Azure","Exam","AZ-104"],"title":"Azure","uri":"/azure/"},{"categories":["Azure","Cloud"],"content":"Eventhub Configure resource group and location. az configure --defaults group=[sandbox Resource Group] location=westus2 Create Eventhub namespace az eventhubs namespace create --name $NS_NAME Fetch authorization key and connectionstring az eventhubs namespace authorization-rule keys list \\ --name RootManageSharedAccessKey \\ --namespace-name $NS_NAME Create Eventhub az eventhubs eventhub create --name $HUB_NAME --namespace-name $NS_NAME Show eventhub az eventhubs eventhub show --namespace-name $NS_NAME --name $HUB_NAME Connecting to eventhub ** To Publishing Message** Following eventhub details are required for sending event to eventhub: Event hub namespace name Event hub name Shared access policy name Primary shared access key ** Receive messages from an Event Hub** Following eventhub details are required: Event hub namespace name Event hub name Shared access policy name Primary shared access key Storage account name Storage account connection string Storage account container name az storage account create --name $STORAGE_NAME --sku Standard_RAGRS --encryption-service blob Retrieve the storage account key. az storage account keys list --account-name $STORAGE_NAME Retrieve the connection string for an Azure Storage account. az storage account show-connection-string -n $STORAGE_NAME Creates a new container in a storage account. az storage container create --name messages --connection-string \"\u003cconnection string here\u003e\" ","date":"2022-03-09","objectID":"/azure/:0:4","tags":["Cloud","Azure","Exam","AZ-104"],"title":"Azure","uri":"/azure/"},{"categories":["Category 1","Category 2"],"content":"Example article description","date":"2022-01-01","objectID":"/nosql-database/","tags":["Test","Another test"],"title":"Example article title","uri":"/nosql-database/"},{"categories":["Category 1","Category 2"],"content":"You need to put your icon file in layouts/partials directory under your project’s root if you want to display an icon of your social link. The icon filed, which is optional, should be a path relative to ","date":"2022-01-01","objectID":"/nosql-database/:0:0","tags":["Test","Another test"],"title":"Example article title","uri":"/nosql-database/"},{"categories":["Category 1","Category 2"],"content":"Example article description","date":"2022-01-01","objectID":"/relational-database/","tags":["Database","MSQL","RDS"],"title":"relational article title","uri":"/relational-database/"},{"categories":["Category 1","Category 2"],"content":"You need to put your icon file in layouts/partials directory under your project’s root if you want to display an icon of your social link. The icon filed, which is optional, should be a path relative to ","date":"2022-01-01","objectID":"/relational-database/:0:0","tags":["Database","MSQL","RDS"],"title":"relational article title","uri":"/relational-database/"},{"categories":["API","Microservices"],"content":"Introducton Microservices - also known as the microservice architecture - is an architectural style that structures an application as a collection of services that are Highly maintainable and testable Loosely coupled Independently deployable Organized around business capabilities Owned by a small team The microservice architecture enables the rapid, frequent and reliable delivery of large, complex applications. It also enables an organization to evolve its technology stack. ","date":"2022-01-01","objectID":"/microservices/:1:0","tags":["Microservices","Services","Design Principles"],"title":"Microservices","uri":"/microservices/"},{"categories":["API","Microservices"],"content":"Install Docker Install Docker: Windows Use the following URL and download the installation file: https://hub.docker.com/editions/community/docker-ce-desktop-windows Install Docker: Linux Use the following URL and download the installation file: https://hub.docker.com/editions/community/docker-ce-desktop-windows Install Docker: Mac Use the following URL and download the installation file: https://hub.docker.com/editions/community/docker-ce-desktop-windows ","date":"2022-01-01","objectID":"/microservices/:1:1","tags":["Microservices","Services","Design Principles"],"title":"Microservices","uri":"/microservices/"},{"categories":["DevOps"],"content":"Azure Devops ","date":"2022-01-01","objectID":"/devops/:1:0","tags":["DevOps","CI/CD","CI","CD"],"title":"DevOps","uri":"/devops/"},{"categories":["DevOps"],"content":"Azure Devops Services APP Tier DB -SQL Server Oncloud dev.azure.com Suppoerts microsoft as well as self hosted agents ","date":"2022-01-01","objectID":"/devops/:1:1","tags":["DevOps","CI/CD","CI","CD"],"title":"DevOps","uri":"/devops/"},{"categories":["DevOps"],"content":"Azure Devops Server APP Tier DB -SQL Server On Premise on customer network only Self-hosted agents Microsoft Hosted Agents Runs in VM in the cloud Linux, Windows, MAcos Free upto 1800 minutes of build Paid plans for multiple parellel runs Self Hosted Agents Runs on customer MAchine Linux, Windows, MAcos Free for use, unlimited Paid plans for multiple parallel runs ","date":"2022-01-01","objectID":"/devops/:1:2","tags":["DevOps","CI/CD","CI","CD"],"title":"DevOps","uri":"/devops/"},{"categories":["API","Microservices","Graph QL"],"content":"Systems design is the process of defining the architecture, product design, modules, interfaces, and data for a system to satisfy specified requirements. Systems design could be seen as the application of systems theory to product development. There is some overlap with the disciplines of systems analysis, systems architecture and systems engineering. This article describes fundamental building blocks of Systems design, and will disscuss some of the common systems. ","date":"2022-01-01","objectID":"/graph-ql/:0:0","tags":["Graph QL","Type","Query"],"title":"Graph QL","uri":"/graph-ql/"},{"categories":["API","Microservices","Graph QL"],"content":"GraphQL Types Primary scalar types GraphQL GraphQL .NET C# String StringGraphType String Int IntGraphType Int Float FloatGraphType double Boolean BooleanGraphType Bool ID IdGraphType Boo Other scalar types GraphQL GraphQL .NET C# String StringGraphType String Int IntGraphType Int Float FloatGraphType double Boolean BooleanGraphType Bool ID IdGraphType Boo ","date":"2022-01-01","objectID":"/graph-ql/:1:0","tags":["Graph QL","Type","Query"],"title":"Graph QL","uri":"/graph-ql/"},{"categories":["API","Microservices","Graph QL"],"content":"Basic Syntax Golang templates are HTML files with the addition of variables and functions. Go variables and functions are accessible within {{ }} Accessing a predefined variable “foo”: {{ foo }} Parameters are separated using spaces Calling the add function with input of 1, 2: {{ add 1 2 }} Methods and fields are accessed via dot notation Accessing the Page Parameter “bar” {{ .Params.bar }} Parentheses can be used to group items together {{ if or (isset .Params \"alt\") (isset .Params \"caption\") }} Caption {{ end }} ","date":"2022-01-01","objectID":"/graph-ql/:2:0","tags":["Graph QL","Type","Query"],"title":"Graph QL","uri":"/graph-ql/"},{"categories":["API","Microservices","Graph QL"],"content":"Variables Each Go template has a struct (object) made available to it. In hugo each template is passed either a page or a node struct depending on which type of page you are rendering. More details are available on the variables page. A variable is accessed by referencing the variable name. \u003ctitle\u003e{{ .Title }}\u003c/title\u003e Variables can also be defined and referenced. {{ $address := \"123 Main St.\"}} {{ $address }} ","date":"2022-01-01","objectID":"/graph-ql/:3:0","tags":["Graph QL","Type","Query"],"title":"Graph QL","uri":"/graph-ql/"},{"categories":["API","Microservices","Graph QL"],"content":"Functions Go template ship with a few functions which provide basic functionality. The Go template system also provides a mechanism for applications to extend the available functions with their own. Hugo template functions provide some additional functionality we believe are useful for building websites. Functions are called by using their name followed by the required parameters separated by spaces. Template functions cannot be added without recompiling hugo. Example: {{ add 1 2 }} ","date":"2022-01-01","objectID":"/graph-ql/:4:0","tags":["Graph QL","Type","Query"],"title":"Graph QL","uri":"/graph-ql/"},{"categories":["API","Microservices","Graph QL"],"content":"Includes When including another template you will pass to it the data it will be able to access. To pass along the current context please remember to include a trailing dot. The templates location will always be starting at the /layout/ directory within Hugo. Example: {{ template \"chrome/header.html\" . }} ","date":"2022-01-01","objectID":"/graph-ql/:5:0","tags":["Graph QL","Type","Query"],"title":"Graph QL","uri":"/graph-ql/"},{"categories":["API","Microservices","Graph QL"],"content":"Logic Go templates provide the most basic iteration and conditional logic. ","date":"2022-01-01","objectID":"/graph-ql/:6:0","tags":["Graph QL","Type","Query"],"title":"Graph QL","uri":"/graph-ql/"},{"categories":["API","Microservices","Graph QL"],"content":"Iteration Just like in Go, the Go templates make heavy use of range to iterate over a map, array or slice. The following are different examples of how to use range. Example 1: Using Context {{ range array }} {{ . }} {{ end }} Example 2: Declaring value variable name {{range $element := array}} {{ $element }} {{ end }} Example 2: Declaring key and value variable name {{range $index, $element := array}} {{ $index }} {{ $element }} {{ end }} ","date":"2022-01-01","objectID":"/graph-ql/:6:1","tags":["Graph QL","Type","Query"],"title":"Graph QL","uri":"/graph-ql/"},{"categories":["API","Microservices","Graph QL"],"content":"Conditionals If, else, with, or, \u0026 and provide the framework for handling conditional logic in Go Templates. Like range, each statement is closed with end. Go Templates treat the following values as false: false 0 any array, slice, map, or string of length zero Example 1: If {{ if isset .Params \"title\" }}\u003ch4\u003e{{ index .Params \"title\" }}\u003c/h4\u003e{{ end }} Example 2: If -\u003e Else {{ if isset .Params \"alt\" }} {{ index .Params \"alt\" }} {{else}} {{ index .Params \"caption\" }} {{ end }} Example 3: And \u0026 Or {{ if and (or (isset .Params \"title\") (isset .Params \"caption\")) (isset .Params \"attr\")}} Example 4: With An alternative way of writing “if” and then referencing the same value is to use “with” instead. With rebinds the context . within its scope, and skips the block if the variable is absent. The first example above could be simplified as: {{ with .Params.title }}\u003ch4\u003e{{ . }}\u003c/h4\u003e{{ end }} Example 5: If -\u003e Else If {{ if isset .Params \"alt\" }} {{ index .Params \"alt\" }} {{ else if isset .Params \"caption\" }} {{ index .Params \"caption\" }} {{ end }} ","date":"2022-01-01","objectID":"/graph-ql/:6:2","tags":["Graph QL","Type","Query"],"title":"Graph QL","uri":"/graph-ql/"},{"categories":["API","Microservices","Graph QL"],"content":"Pipes One of the most powerful components of Go templates is the ability to stack actions one after another. This is done by using pipes. Borrowed from unix pipes, the concept is simple, each pipeline’s output becomes the input of the following pipe. Because of the very simple syntax of Go templates, the pipe is essential to being able to chain together function calls. One limitation of the pipes is that they only can work with a single value and that value becomes the last parameter of the next pipeline. A few simple examples should help convey how to use the pipe. Example 1 : {{ if eq 1 1 }} Same {{ end }} is the same as {{ eq 1 1 | if }} Same {{ end }} It does look odd to place the if at the end, but it does provide a good illustration of how to use the pipes. Example 2 : {{ index .Params \"disqus_url\" | html }} Access the page parameter called “disqus_url” and escape the HTML. Example 3 : {{ if or (or (isset .Params \"title\") (isset .Params \"caption\")) (isset .Params \"attr\")}} Stuff Here {{ end }} Could be rewritten as {{ isset .Params \"caption\" | or isset .Params \"title\" | or isset .Params \"attr\" | if }} Stuff Here {{ end }} ","date":"2022-01-01","objectID":"/graph-ql/:7:0","tags":["Graph QL","Type","Query"],"title":"Graph QL","uri":"/graph-ql/"},{"categories":["API","Microservices","Graph QL"],"content":"Context (aka. the dot) The most easily overlooked concept to understand about Go templates is that {{ . }} always refers to the current context. In the top level of your template this will be the data set made available to it. Inside of a iteration it will have the value of the current item. When inside of a loop the context has changed. . will no longer refer to the data available to the entire page. If you need to access this from within the loop you will likely want to set it to a variable instead of depending on the context. Example: {{ $title := .Site.Title }} {{ range .Params.tags }} \u003cli\u003e \u003ca href=\"{{ $baseurl }}/tags/{{ . | urlize }}\"\u003e{{ . }}\u003c/a\u003e - {{ $title }} \u003c/li\u003e {{ end }} Notice how once we have entered the loop the value of {{ . }} has changed. We have defined a variable outside of the loop so we have access to it from within the loop. Hugo Parameters Hugo provides the option of passing values to the template language through the site configuration (for sitewide values), or through the meta data of each specific piece of content. You can define any values of any type (supported by your front matter/config format) and use them however you want to inside of your templates. ","date":"2022-01-01","objectID":"/graph-ql/:8:0","tags":["Graph QL","Type","Query"],"title":"Graph QL","uri":"/graph-ql/"},{"categories":["API","Microservices","Graph QL"],"content":"Using Content (page) Parameters In each piece of content you can provide variables to be used by the templates. This happens in the front matter. An example of this is used in this documentation site. Most of the pages benefit from having the table of contents provided. Sometimes the TOC just doesn’t make a lot of sense. We’ve defined a variable in our front matter of some pages to turn off the TOC from being displayed. Here is the example front matter: --- title: \"Permalinks\" date: \"2013-11-18\" aliases: - \"/doc/permalinks/\" groups: [\"extras\"] groups_weight: 30 notoc: true --- Here is the corresponding code inside of the template: {{ if not .Params.notoc }} \u003cdiv id=\"toc\" class=\"well col-md-4 col-sm-6\"\u003e {{ .TableOfContents }} \u003c/div\u003e {{ end }} ","date":"2022-01-01","objectID":"/graph-ql/:9:0","tags":["Graph QL","Type","Query"],"title":"Graph QL","uri":"/graph-ql/"},{"categories":["API","Microservices","Graph QL"],"content":"Using Site (config) Parameters In your top-level configuration file (eg, config.yaml) you can define site parameters, which are values which will be available to you in chrome. For instance, you might declare: params:CopyrightHTML:\"Copyright \u0026#xA9; 2013 John Doe. All Rights Reserved.\"TwitterUser:\"spf13\"SidebarRecentLimit:5 Within a footer layout, you might then declare a \u003cfooter\u003e which is only provided if the CopyrightHTML parameter is provided, and if it is given, you would declare it to be HTML-safe, so that the HTML entity is not escaped again. This would let you easily update just your top-level config file each January 1st, instead of hunting through your templates. {{if .Site.Params.CopyrightHTML}}\u003cfooter\u003e \u003cdiv class=\"text-center\"\u003e{{.Site.Params.CopyrightHTML | safeHtml}}\u003c/div\u003e \u003c/footer\u003e{{end}} An alternative way of writing the “if” and then referencing the same value is to use “with” instead. With rebinds the context . within its scope, and skips the block if the variable is absent: {{with .Site.Params.TwitterUser}}\u003cspan class=\"twitter\"\u003e \u003ca href=\"https://twitter.com/{{.}}\" rel=\"author\"\u003e \u003cimg src=\"/images/twitter.png\" width=\"48\" height=\"48\" title=\"Twitter: {{.}}\" alt=\"Twitter\"\u003e\u003c/a\u003e \u003c/span\u003e{{end}} Finally, if you want to pull “magic constants” out of your layouts, you can do so, such as in this example: \u003cnav class=\"recent\"\u003e \u003ch1\u003eRecent Posts\u003c/h1\u003e \u003cul\u003e{{range first .Site.Params.SidebarRecentLimit .Site.Recent}} \u003cli\u003e\u003ca href=\"{{.RelPermalink}}\"\u003e{{.Title}}\u003c/a\u003e\u003c/li\u003e {{end}}\u003c/ul\u003e \u003c/nav\u003e ","date":"2022-01-01","objectID":"/graph-ql/:10:0","tags":["Graph QL","Type","Query"],"title":"Graph QL","uri":"/graph-ql/"},{"categories":["Architecture","Microservices","System Design"],"content":"Install the .NET Core SDK: First, you need to download and install the .NET Core SDK from the official website: https://dotnet.microsoft.com/download Create a new .NET Core project: Open a command prompt or terminal and navigate to the directory where you want to create your project. Then run the following command to create a new .NET Core project: javascript Copy code dotnet new webapi -n MyMicroservice This will create a new .NET Core Web API project named “MyMicroservice” in a new directory. Add required dependencies: Depending on your microservice’s requirements, you may need to add additional dependencies to your project. You can add these dependencies using the dotnet add package command. Implement your microservice logic: Once you have created your project, you can start implementing your microservice logic in the Controllers folder. You can create additional folders for different parts of your microservice as needed. Run and test your microservice: You can run your microservice using the dotnet run command. Once your microservice is running, you can test it using tools like Postman or curl. Publish and deploy your microservice: When you’re ready to deploy your microservice, you can use the dotnet publish command to create a publishable package. You can then deploy this package to your production environment. That’s it! These are the basic steps for creating a .NET Core microservice. Of course, there are many other details and considerations to keep in mind when building a microservice, but these steps should help you get started. ","date":"2022-01-01","objectID":"/net-microservice/:0:0","tags":["CAP Theorem","Scaling","Availability","Load Balancers","MapReduce","Replication And Sharding","Caching"],"title":"System Design","uri":"/net-microservice/"},{"categories":["Cloud","AWS"],"content":"Lambda function static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like ▾ \u003croot\u003e ▾ images logo.png should become \u003croot\u003e ▾ static/ ▾ images/ logo.png Additionally, you’ll want any files that should reside at the root (such as CNAME) to be moved to static. ","date":"2021-01-10","objectID":"/aws-services/:1:0","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","AWS"],"content":"API Gateway Hugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the Hugo configuration documentation for details. ","date":"2021-01-10","objectID":"/aws-services/:2:0","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","AWS"],"content":"SQS (AWS Queues) _site The default is for Jekyll to publish to _site and for Hugo to publish to public. If, like me, you have _site mapped to a git submodule on the gh-pages branch, you’ll want to do one of two alternatives: Change your submodule to point to map gh-pages to public instead of _site (recommended). git submodule deinit _site git rm _site git submodule add -b gh-pages git@github.com:your-username/your-repo.git public Or, change the Hugo configuration to use _site instead of public. { .. \"publishdir\": \"_site\", .. } ","date":"2021-01-10","objectID":"/aws-services/:3:0","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","AWS"],"content":"SNS That’s the bulk of the work right here. The documentation is your friend. You should refer to Jekyll’s template documentation if you need to refresh your memory on how you built your blog and Hugo’s template to learn Hugo’s way. As a single reference data point, converting my templates for heyitsalex.net took me no more than a few hours. ","date":"2021-01-10","objectID":"/aws-services/:4:0","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","AWS"],"content":"Stepfunctions Jekyll has plugins; Hugo has shortcodes. It’s fairly trivial to do a port. ","date":"2021-01-10","objectID":"/aws-services/:5:0","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","AWS"],"content":"S3 As an example, I was using a custom image_tag plugin to generate figures with caption when running Jekyll. As I read about shortcodes, I found Hugo had a nice built-in shortcode that does exactly the same thing. Jekyll’s plugin: module Jekyll class ImageTag \u003c Liquid::Tag @url = nil @caption = nil @class = nil @link = nil // Patterns IMAGE_URL_WITH_CLASS_AND_CAPTION = IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))(\\s+)\"(.*?)\"(\\s+)-\u003e((https?:\\/\\/|\\/)(\\S+))(\\s*)/i IMAGE_URL_WITH_CAPTION = /((https?:\\/\\/|\\/)(\\S+))(\\s+)\"(.*?)\"/i IMAGE_URL_WITH_CLASS = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))/i IMAGE_URL = /((https?:\\/\\/|\\/)(\\S+))/i def initialize(tag_name, markup, tokens) super if markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK @class = $1 @url = $3 @caption = $7 @link = $9 elsif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION @class = $1 @url = $3 @caption = $7 elsif markup =~ IMAGE_URL_WITH_CAPTION @url = $1 @caption = $5 elsif markup =~ IMAGE_URL_WITH_CLASS @class = $1 @url = $3 elsif markup =~ IMAGE_URL @url = $1 end end def render(context) if @class source = \"\u003cfigure class='#{@class}'\u003e\" else source = \"\u003cfigure\u003e\" end if @link source += \"\u003ca href=\\\"#{@link}\\\"\u003e\" end source += \"\u003cimg src=\\\"#{@url}\\\"\u003e\" if @link source += \"\u003c/a\u003e\" end source += \"\u003cfigcaption\u003e#{@caption}\u003c/figcaption\u003e\" if @caption source += \"\u003c/figure\u003e\" source end end end Liquid::Template.register_tag('image', Jekyll::ImageTag) is written as this Hugo shortcode: \u003c!-- image --\u003e \u003cfigure {{ with .Get \"class\" }}class=\"{{.}}\"{{ end }}\u003e {{ with .Get \"link\"}}\u003ca href=\"{{.}}\"\u003e{{ end }} \u003cimg src=\"{{ .Get \"src\" }}\" {{ if or (.Get \"alt\") (.Get \"caption\") }}alt=\"{{ with .Get \"alt\"}}{{.}}{{else}}{{ .Get \"caption\" }}{{ end }}\"{{ end }} /\u003e {{ if .Get \"link\"}}\u003c/a\u003e{{ end }} {{ if or (or (.Get \"title\") (.Get \"caption\")) (.Get \"attr\")}} \u003cfigcaption\u003e{{ if isset .Params \"title\" }} {{ .Get \"title\" }}{{ end }} {{ if or (.Get \"caption\") (.Get \"attr\")}}\u003cp\u003e {{ .Get \"caption\" }} {{ with .Get \"attrlink\"}}\u003ca href=\"{{.}}\"\u003e {{ end }} {{ .Get \"attr\" }} {{ if .Get \"attrlink\"}}\u003c/a\u003e {{ end }} \u003c/p\u003e {{ end }} \u003c/figcaption\u003e {{ end }} \u003c/figure\u003e \u003c!-- image --\u003e ","date":"2021-01-10","objectID":"/aws-services/:5:1","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","AWS"],"content":"Usage I simply changed: {% image full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg \"One of my favorite touristy-type photos. I secretly waited for the good light while we were \"having fun\" and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\" -\u003ehttp://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %} to this (this example uses a slightly extended version named fig, different than the built-in figure): {{% fig class=\"full\" src=\"http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg\" title=\"One of my favorite touristy-type photos. I secretly waited for the good light while we were having fun and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\" link=\"http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/\" %}} As a bonus, the shortcode named parameters are, arguably, more readable. ","date":"2021-01-10","objectID":"/aws-services/:5:2","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","AWS"],"content":"Eventbridge ","date":"2021-01-10","objectID":"/aws-services/:6:0","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","AWS"],"content":"Fix content Depending on the amount of customization that was done with each post with Jekyll, this step will require more or less effort. There are no hard and fast rules here except that hugo server --watch is your friend. Test your changes and fix errors as needed. ","date":"2021-01-10","objectID":"/aws-services/:6:1","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","AWS"],"content":"Clean up You’ll want to remove the Jekyll configuration at this point. If you have anything else that isn’t used, delete it. ","date":"2021-01-10","objectID":"/aws-services/:6:2","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","AWS"],"content":"VPC Hey, it’s Alex was migrated in less than a father-with-kids day from Jekyll to Hugo. You can see all the changes (and screw-ups) by looking at this diff. ","date":"2021-01-10","objectID":"/aws-services/:7:0","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","AWS"],"content":"Subnet You’ll want to remove the Jekyll configuration at this point. If you have anything else that isn’t used, delete it. ","date":"2021-01-10","objectID":"/aws-services/:7:1","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","AWS"],"content":"Routing ","date":"2021-01-10","objectID":"/aws-services/:8:0","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","AWS"],"content":"Route table You’ll want to remove the Jekyll configuration at this point. If you have anything else that isn’t used, delete it. ","date":"2021-01-10","objectID":"/aws-services/:8:1","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","AWS"],"content":"Route table You’ll want to remove the Jekyll configuration at this point. If you have anything else that isn’t used, delete it. ","date":"2021-01-10","objectID":"/aws-services/:8:2","tags":["AWS","Serverless","EC2","VPC","SNS","SQS","AWS Networking"],"title":"AWS Services","uri":"/aws-services/"},{"categories":["Cloud","Azure"],"content":"Azure Event Hubs Azure Event Hubs is a managed, real-time, event streaming platform provided by Microsoft Azure. It is a highly scalable and flexible platform that can process millions of events per second. Here is a high-level overview of how Azure Event Hubs works: ","date":"2021-01-10","objectID":"/azure-services/:1:0","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":["Cloud","Azure"],"content":"Data Ingestion: Applications send data to Azure Event Hubs using a sender client library. The data can be sent in any format such as JSON, XML, or binary. ","date":"2021-01-10","objectID":"/azure-services/:1:1","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":["Cloud","Azure"],"content":"Event Hubs Azure Event Hubs is a distributed, partitioned stream of events. The incoming events are partitioned and distributed across multiple nodes in the Azure infrastructure. Each partition can contain a subset of the data and is assigned a unique identifier. ","date":"2021-01-10","objectID":"/azure-services/:1:2","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":["Cloud","Azure"],"content":"Producers Producers are applications that send data to the Event Hubs. A producer can send data to a specific partition or let the Event Hubs distribute the data across partitions. ","date":"2021-01-10","objectID":"/azure-services/:1:3","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":["Cloud","Azure"],"content":"Consumers Consumers are applications that receive data from the Event Hubs. A consumer can read data from one or more partitions and can process the data in real-time. The consumers can use a receiver client library to receive data from Event Hubs. ","date":"2021-01-10","objectID":"/azure-services/:1:4","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":["Cloud","Azure"],"content":"Event Processor Host The Event Processor Host is a library provided by Azure that simplifies the process of receiving and processing events from Event Hubs. The Event Processor Host provides features such as load balancing, checkpointing, and scaling. ","date":"2021-01-10","objectID":"/azure-services/:1:5","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":["Cloud","Azure"],"content":"Scaling Azure Event Hubs can scale horizontally to handle millions of events per second. The Event Hubs can automatically adjust the number of nodes and partitions based on the incoming data rate. ","date":"2021-01-10","objectID":"/azure-services/:1:6","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":["Cloud","Azure"],"content":"Checkpointing Azure Event Hubs provides a built-in checkpointing mechanism that enables consumers to keep track of their progress. The checkpointing mechanism allows consumers to resume reading from where they left off in case of failure. How checkpoint works In the context of Azure Event Hubs, a checkpoint is a mechanism that enables a consumer to keep track of its progress while reading events from a partition. When a consumer reads events from a partition, it processes the events and moves forward to read the next batch of events. The checkpoint mechanism allows the consumer to store the information about the last event it read from the partition, so that it can resume reading from where it left off in case of a failure or a restart. Here’s how checkpointing works in Azure Event Hubs: Checkpoint Store: Azure Event Hubs stores checkpoint information in a separate storage account that can be configured by the consumer. The checkpoint store can be an Azure Blob Storage account or an Azure Cosmos DB account. Checkpointing API: Azure Event Hubs provides a checkpointing API that allows consumers to store the checkpoint information in the checkpoint store. The consumer can use the checkpointing API to store the offset of the last event it read from a partition. Checkpointing Frequency: The frequency of checkpointing can be configured by the consumer. The consumer can choose to checkpoint after processing a fixed number of events, after processing events for a fixed duration of time, or after processing events up to a specific time. Checkpointing Responsibility: The responsibility of checkpointing is on the consumer. The consumer needs to ensure that it checkpoints the last event it processed before shutting down or before another consumer takes over the partition. Checkpoint Recovery: When a consumer restarts or takes over a partition, it reads the checkpoint information from the checkpoint store. The checkpoint information provides the offset of the last event that was processed by the previous consumer. The new consumer can then resume reading events from where the previous consumer left off. Checkpointing is a crucial mechanism in Azure Event Hubs to ensure that consumers can resume reading events from where they left off in case of a failure or a restart. Checkpointing enables consumers to process large volumes of data without the risk of losing progress or processing the same data multiple times. It is important to configure checkpointing correctly to ensure that it meets the requirements of the consumer’s use case. ","date":"2021-01-10","objectID":"/azure-services/:1:7","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":["Cloud","Azure"],"content":"High level System design +----------------+ +----------------+ +-----------------+ | Producer App 1 | | Producer App 2 | | Producer App N | +-------+--------+ +-------+--------+ +-------+---------+ | | | +-----v--------------------------v--------------------------v-----+ | Azure Event Hubs | | | | +------------------+ +-----------------+ +------------------+ | | Partition 1 | | Partition 2 | | Partition N | | +--------+---------+ +--------+--------+ +--------+---------+ | | | | | +-----v------------+ +-----v------------+ +----v------------+ | | Consumer Group 1 | | Consumer Group 2 | | Consumer Group N | | +-----------------+ +-----------------+ +-----------------+ | | | | | +------------v---------------+ +--v-----------------v--+ | | Event Processor Host 1 | | Event Processor Host N | | +---------------------------+ +---------------------------+ | | +-----------------------------------------------------------------+ In this diagram, we have multiple producer applications that send data to Azure Event Hubs. The data is then distributed across multiple partitions in the Event Hubs. Each partition can contain a subset of the data and is assigned a unique identifier. Consumers can read data from one or more partitions by using a consumer group. A consumer group is a view of a specific subset of the partitions in an Event Hub. Multiple consumer groups can read data from the same Event Hub simultaneously. Each consumer group has its own offset in each partition, so it can read the data independently. The Event Processor Host is a library provided by Azure that simplifies the process of receiving and processing events from Event Hubs. The Event Processor Host provides features such as load balancing, checkpointing, and scaling. Multiple instances of the Event Processor Host can be running in parallel to process data from multiple partitions. ","date":"2021-01-10","objectID":"/azure-services/:1:8","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":["Cloud","Azure"],"content":"Security Azure Event Hubs provides security features such as access control, encryption, and firewalls. The data is encrypted in transit and at rest, and the access to the Event Hubs can be controlled using Azure Active Directory or Shared Access Signatures. In summary, Azure Event Hubs is a managed, real-time, event streaming platform that enables applications to ingest, process, and analyze large volumes of data. The data is partitioned and distributed across multiple nodes, and can be processed in real-time using consumer applications. Azure Event Hubs provides features such as scaling, checkpointing, and security to ensure reliability and security of the data. ","date":"2021-01-10","objectID":"/azure-services/:1:9","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":["Cloud","Azure"],"content":"Cosmos DB Cosmos DB is a globally distributed, multi-model database service. It is designed to be highly available, globally scalable, and offer low-latency performance for different types of applications. Cosmos DB’s architecture is based on the principles of the Azure Service Fabric, which is a distributed systems platform used to build and deploy microservices-based applications. The Service Fabric architecture provides high availability, scalability, and reliability through the use of distributed systems techniques such as replication, partitioning, and quorum-based protocols. The key components of Cosmos DB’s architecture are: ","date":"2021-01-10","objectID":"/azure-services/:2:0","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":["Cloud","Azure"],"content":"Components Partitioning: Cosmos DB partitions data across multiple nodes to achieve horizontal scalability and low-latency performance. Partitioning is done automatically by the system based on the partition key, which determines the data distribution across different nodes. Multi-model support: Cosmos DB supports multiple data models, including document, key-value, graph, and column-family. This allows developers to choose the right data model for their application and reduces the need for separate databases for different data models. Replication: Cosmos DB replicates data across multiple regions to achieve high availability and disaster recovery. Replication is done automatically by the system and provides configurable consistency levels to meet different application requirements. Global distribution: Cosmos DB is a globally distributed database service that enables users to replicate data across multiple regions worldwide. This allows applications to provide low-latency access to data for users located in different parts of the world. Consistency: Cosmos DB provides configurable consistency levels, ranging from strong to eventual consistency, to enable developers to choose the right level of consistency for their application. This allows applications to balance data consistency and performance trade-offs based on their specific requirements. API layer: Cosmos DB provides a unified API layer that abstracts the underlying data models and enables developers to access data using different programming languages and protocols. This API layer includes support for popular APIs such as SQL, MongoDB, Cassandra, and Azure Table Storage. ","date":"2021-01-10","objectID":"/azure-services/:2:1","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":["Cloud","Azure"],"content":"high-level diagram +-------------------+ | Frontend | | Application/API | +--------+----------+ | | | +--------v----------+ | Gateway | +--------+----------+ | | | +--------v----------+ | Query Layer | | (partitioned by | | partition key) | +--------+----------+ | | +------------v-----------+ | Cosmos DB | |(distributed database) | +------------+-----------+ | | | +--------------v-------------+ | Replication and Sync Layer | +--------------+-------------+ | | +--------------v-------------+ | Physical Storage Layer | +------------------------------+ This diagram shows the various components of Cosmos DB and their interactions: Frontend: This component represents the application or API that interacts with Cosmos DB. Gateway: The gateway component receives requests from the frontend and forwards them to the query layer. Query Layer: The query layer is responsible for processing queries and updates to the database. It is partitioned by the partition key to achieve horizontal scalability and low-latency performance. Cosmos DB: This is the distributed database that stores and manages the data. It is designed to be globally distributed and provide configurable consistency levels. Replication and Sync Layer: This component is responsible for replicating data across multiple regions and ensuring data consistency. It also handles conflict resolution and provides disaster recovery capabilities. Physical Storage Layer: This is the layer that stores the data on physical storage devices. ","date":"2021-01-10","objectID":"/azure-services/:2:2","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":["Cloud","Azure"],"content":"Indexing in Cosmos DB In Cosmos DB, automatic indexing is a feature that automatically indexes all properties of documents stored in a collection without requiring any explicit schema definition or index creation. This feature helps developers to build applications faster by eliminating the need for manual index creation and maintenance. Here is how automatic indexing works in Cosmos DB: Property Extraction: When a document is inserted into a collection, the automatic indexing system automatically extracts all properties and their values from the document. Indexing Policy: The indexing policy for the collection determines which properties are indexed and how they are indexed. By default, all properties are indexed using the range index. Range Indexing: Range indexing is used to support query predicates on numeric, string, and date/time data types. The system creates a separate index for each property of these data types and stores the indexed values in a B-tree structure. Spatial Indexing: Spatial indexing is used to support geospatial queries on spatial data types. The system automatically creates a spatial index for each property of a spatial data type. Composite Indexing: Composite indexing is used to support queries on multiple properties. The system automatically creates composite indexes for frequently used combinations of properties. Automatic Index Maintenance: The system automatically maintains the indexes by updating them when the properties of the documents are modified. Consistency: The system provides configurable consistency levels for queries on the indexed properties. The consistency level determines the level of consistency guarantee for the query results based on the time and order of the index updates. ","date":"2021-01-10","objectID":"/azure-services/:2:3","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":["Cloud","Azure"],"content":"Autoscaling Autoscaling in Cosmos DB is a feature that automatically adjusts the throughput of a database or a container based on the workload and usage patterns. Autoscaling enables applications to handle varying workloads and traffic spikes while ensuring optimal performance and cost efficiency. Here is how autoscaling works in Cosmos DB: Throughput: In Cosmos DB, throughput is a measure of the database’s or container’s provisioned resources, which includes CPU, memory, I/O, and network bandwidth. Throughput is expressed in Request Units (RUs), which is a currency for the database operations. Each operation in Cosmos DB consumes a certain amount of RUs based on its complexity, size, and consistency level. Metrics: The autoscaling feature uses various metrics to monitor the workload and usage patterns of the database or container. The metrics include CPU utilization, storage utilization, request rate, and latency. The metrics are collected and aggregated over a period of time to provide a holistic view of the workload. Scaling Trigger: Based on the collected metrics, the autoscaling feature triggers scaling operations to adjust the throughput of the database or container. The scaling operations can be either upscaling or downscaling, depending on the workload and usage patterns. Upscaling: When the workload increases, the autoscaling feature triggers an upscaling operation to increase the throughput of the database or container. The upscaling operation can be done either by increasing the number of physical partitions or by increasing the provisioned RUs. Downscaling: When the workload decreases, the autoscaling feature triggers a downscaling operation to reduce the throughput of the database or container. The downscaling operation can be done either by decreasing the number of physical partitions or by decreasing the provisioned RUs. Configuration: The autoscaling feature can be configured to use different scaling policies, which define the rules and thresholds for triggering scaling operations. The scaling policies can be based on the maximum and minimum RUs, the percentage of CPU utilization, or the maximum latency. Integration: The autoscaling feature can be integrated with Azure Monitor, which provides a centralized monitoring and alerting system for the database or container. The integration enables proactive monitoring and troubleshooting of the database or container based on the collected metrics and alerts. Sharad Singh How backup is done in Cosmos In Cosmos DB, backups are done automatically by the service to ensure data durability and availability. Cosmos DB provides two types of backups - automated backups and manual backups. Automated Backups: Cosmos DB automatically takes backups of all the data stored in a container or a database at regular intervals. The frequency of backups and retention period can be configured by the user. The automated backups are stored in Azure Storage Account and can be restored using the Azure Portal, Azure CLI or REST API. The automated backups are taken at the partition level and are consistent within a partition key range. Manual Backups: In addition to automated backups, Cosmos DB also provides the ability to take manual backups at any point in time. Manual backups are useful when a specific version of the data needs to be restored or for taking a backup before making major changes to the data. Manual backups are stored in Azure Storage Account and can be restored using the Azure Portal, Azure CLI or REST API. Here is how backup works in Cosmos DB: Backup Policy: The user configures the backup policy for a container or a database, which includes the backup frequency and retention period. The backup policy can be set using Azure Portal, Azure CLI or REST API. Backup Schedule: Based on the backup policy, Cosmos DB takes automated backups at regular intervals. The backup schedule is based on the partition key ranges and is optimized for minimum impact on the application performance. B","date":"2021-01-10","objectID":"/azure-services/:2:4","tags":["Azure","Event hub","Cosmos DB","Azure Function","Azure Logic Apps"],"title":"Azure Services","uri":"/azure-services/"},{"categories":null,"content":"This is some content The sidebar consists of multiple widgets. Widgets can be enabled individually using the widgets key with a list of widget names as value. You can add your own widgets, by placing a template under ","date":"2014-03-10","objectID":"/mypost/:0:0","tags":null,"title":"Databases","uri":"/mypost/"},{"categories":null,"content":"Docker ","date":"0001-01-01","objectID":"/containerization1/:1:0","tags":null,"title":"","uri":"/containerization1/"},{"categories":null,"content":"Install Docker Install Docker: Windows Use the following URL and download the installation file: https://hub.docker.com/editions/community/docker-ce-desktop-windows Install Docker: Linux Use the following URL and download the installation file: https://hub.docker.com/editions/community/docker-ce-desktop-windows Install Docker: Mac Use the following URL and download the installation file: https://hub.docker.com/editions/community/docker-ce-desktop-windows Commands $ docker version // docker version Create Cluster eksctl create cluster –name=eksdemo1 –region=us-east-1 –zones=us-east-1a,us-east-1b –without-nodegroup Get List of clusters eksctl get cluster Step-02: Create \u0026 Associate IAM OIDC Provider for our EKS Cluster To enable and use AWS IAM roles for Kubernetes service accounts on our EKS cluster, we must create \u0026 associate OIDC identity provider. To do so using eksctl we can use the below command. Use latest eksctl version (as on today the latest version is 0.21.0) Template eksctl utils associate-iam-oidc-provider –region region-code –cluster –approve Replace with region \u0026 cluster name eksctl utils associate-iam-oidc-provider –region us-east-1 –cluster eksdemo1 –approve Step-03: Create EC2 Keypair Create a new EC2 Keypair with name as kube-demo This keypair we will use it when creating the EKS NodeGroup. This will help us to login to the EKS Worker Nodes using Terminal. Step-04: Create Node Group with additional Add-Ons in Public Subnets These add-ons will create the respective IAM policies for us automatically within our Node Group role. Create Public Node Group eksctl create nodegroup –cluster=eksdemo1 –region=us-east-1 –name=eksdemo1-ng-public1 –node-type=t3.medium –nodes=2 –nodes-min=2 –nodes-max=4 –node-volume-size=20 –ssh-access –ssh-public-key=kube-demo –managed –asg-access –external-dns-access –full-ecr-access –appmesh-access –alb-ingress-access eksctl create nodegroup –cluster=eksdemo1 –region=us-east-1 –name=eksdemo1-ng-public1 –node-type=t3.medium –nodes=2 –nodes-min=2 –nodes-max=4 –node-volume-size=20 –ssh-access –ssh-public-key=ekc-ecs-demo-2022 –managed –asg-access –external-dns-access –full-ecr-access –appmesh-access –alb-ingress-access Step-05: Verify Cluster \u0026 Nodes List EKS clusters eksctl get cluster List NodeGroups in a cluster eksctl get nodegroup –cluster= List Nodes in current kubernetes cluster kubectl get nodes -o wide Our kubectl context should be automatically changed to new cluster kubectl config view –minify ","date":"0001-01-01","objectID":"/containerization1/:1:1","tags":null,"title":"","uri":"/containerization1/"},{"categories":null,"content":"Install KubeCtl Reference: https://docs.aws.amazon.com/eks/latest/userguide/install-kubectl.html Primary scalar types Create Cluster eksctl create cluster –name=eksdemo1 –region=us-east-1 –zones=us-east-1a,us-east-1b –without-nodegroup Get List of clusters eksctl get cluster Step-02: Create \u0026 Associate IAM OIDC Provider for our EKS Cluster To enable and use AWS IAM roles for Kubernetes service accounts on our EKS cluster, we must create \u0026 associate OIDC identity provider. To do so using eksctl we can use the below command. Use latest eksctl version (as on today the latest version is 0.21.0) Template eksctl utils associate-iam-oidc-provider –region region-code –cluster –approve Replace with region \u0026 cluster name eksctl utils associate-iam-oidc-provider –region us-east-1 –cluster eksdemo1 –approve Step-03: Create EC2 Keypair Create a new EC2 Keypair with name as kube-demo This keypair we will use it when creating the EKS NodeGroup. This will help us to login to the EKS Worker Nodes using Terminal. Step-04: Create Node Group with additional Add-Ons in Public Subnets These add-ons will create the respective IAM policies for us automatically within our Node Group role. Create Public Node Group eksctl create nodegroup –cluster=eksdemo1 –region=us-east-1 –name=eksdemo1-ng-public1 –node-type=t3.medium –nodes=2 –nodes-min=2 –nodes-max=4 –node-volume-size=20 –ssh-access –ssh-public-key=kube-demo –managed –asg-access –external-dns-access –full-ecr-access –appmesh-access –alb-ingress-access eksctl create nodegroup –cluster=eksdemo1 –region=us-east-1 –name=eksdemo1-ng-public1 –node-type=t3.medium –nodes=2 –nodes-min=2 –nodes-max=4 –node-volume-size=20 –ssh-access –ssh-public-key=ekc-ecs-demo-2022 –managed –asg-access –external-dns-access –full-ecr-access –appmesh-access –alb-ingress-access Step-05: Verify Cluster \u0026 Nodes List EKS clusters eksctl get cluster List NodeGroups in a cluster eksctl get nodegroup –cluster= List Nodes in current kubernetes cluster kubectl get nodes -o wide Our kubectl context should be automatically changed to new cluster kubectl config view –minify ","date":"0001-01-01","objectID":"/containerization1/:2:0","tags":null,"title":"","uri":"/containerization1/"},{"categories":null,"content":"ECR (Elastic Container registory) URL https://aws.amazon.com/ecr/pricing/ //Create repo aws ecr create-repository –repository-name demo-repository // Delete repo aws ecr delete-repository –repository-name demo-repository //Tag and Push image docker tag amazonlinux:2 852051225911.dkr.ecr.us-west-1.amazonaws.com/deploy:amazonlinux2 docker push 852051225911.dkr.ecr.us-west-1.amazonaws.com/deploy:amazonlinux2 aws ecr get-login –region us-west-1 –no-include-email // List repo aws ecr list-images –repository-name demo-repository This article describes fundamental building blocks of [Systems design][gosystemdesign], and will disscuss some of the common systems. ","date":"0001-01-01","objectID":"/containerization1/:2:1","tags":null,"title":"","uri":"/containerization1/"},{"categories":null,"content":"Install KubeCtl Reference: https://docs.aws.amazon.com/eks/latest/userguide/install-kubectl.html Primary scalar types Create Cluster eksctl create cluster –name=eksdemo1 –region=us-east-1 –zones=us-east-1a,us-east-1b –without-nodegroup Get List of clusters eksctl get cluster Step-02: Create \u0026 Associate IAM OIDC Provider for our EKS Cluster To enable and use AWS IAM roles for Kubernetes service accounts on our EKS cluster, we must create \u0026 associate OIDC identity provider. To do so using eksctl we can use the below command. Use latest eksctl version (as on today the latest version is 0.21.0) Template eksctl utils associate-iam-oidc-provider –region region-code –cluster –approve Replace with region \u0026 cluster name eksctl utils associate-iam-oidc-provider –region us-east-1 –cluster eksdemo1 –approve Step-03: Create EC2 Keypair Create a new EC2 Keypair with name as kube-demo This keypair we will use it when creating the EKS NodeGroup. This will help us to login to the EKS Worker Nodes using Terminal. Step-04: Create Node Group with additional Add-Ons in Public Subnets These add-ons will create the respective IAM policies for us automatically within our Node Group role. Create Public Node Group eksctl create nodegroup –cluster=eksdemo1 –region=us-east-1 –name=eksdemo1-ng-public1 –node-type=t3.medium –nodes=2 –nodes-min=2 –nodes-max=4 –node-volume-size=20 –ssh-access –ssh-public-key=kube-demo –managed –asg-access –external-dns-access –full-ecr-access –appmesh-access –alb-ingress-access eksctl create nodegroup –cluster=eksdemo1 –region=us-east-1 –name=eksdemo1-ng-public1 –node-type=t3.medium –nodes=2 –nodes-min=2 –nodes-max=4 –node-volume-size=20 –ssh-access –ssh-public-key=ekc-ecs-demo-2022 –managed –asg-access –external-dns-access –full-ecr-access –appmesh-access –alb-ingress-access Step-05: Verify Cluster \u0026 Nodes List EKS clusters eksctl get cluster List NodeGroups in a cluster eksctl get nodegroup –cluster= List Nodes in current kubernetes cluster kubectl get nodes -o wide Our kubectl context should be automatically changed to new cluster kubectl config view –minify ","date":"0001-01-01","objectID":"/containerization1/:3:0","tags":null,"title":"","uri":"/containerization1/"},{"categories":null,"content":"AKS (Azure Kubernetes Service) Create a resource group az group create --name devopresources --location westeurope Create ACR (Azure container repository) az acr create --resource-group devopresources --name devopsshoppingacr --sku Basic Enable admin access on the ACR repor az acr update --resource-group devopresources --n devopsshoppingacr --admin-enabled true ","date":"0001-01-01","objectID":"/containerization1/:4:0","tags":null,"title":"","uri":"/containerization1/"},{"categories":null,"content":"Preview 03:05 Code for the course 00:28 Support for Apple M1 users 00:30 Preview 09:34 Preview 02:49 Extra note for Linux Users 00:18 If you already have Docker installed… 01:41 Preview 07:16 Preview 03:34 Preview 06:42 Preview 02:46 Attention Apple M1 Users! 00:59 Preview 12:44 Preview 09:13 Writing a Pod 05:06 Running a Pod 10:54 Important note for Docker Desktop and Driver Users 00:52 Services 07:31 NodePort and ClusterIP 12:09 Pod Selection with Labels 15:02 Exercise: Deploy ActiveMQ as a Pod and Service 10:04 ReplicaSets 10:44 Writing a ReplicaSet 10:05 Applying a ReplicaSet to Kubernetes 10:54 Deployments Overview 12:08 Managing Rollouts 12:24 Networking Overview in Kubernetes 08:18 Namespaces - kube-system 09:34 Note for M1 Architectures 00:04 Accessing MySQL from a Pod 07:15 Cygwin extra - fixing the terminal with winpty 04:52 Service Discovery 07:27 Fully Qualified Domain Names (FQDN) 03:27 WARNING - possible resource problems! 00:50 An Introduction to Microservices 15:18 Introduction to Microservices Part 2 10:40 Deploying the Queue 12:38 Deploying the Position Simulator 07:56 Inspecting Pod Logs 05:40 Deploying the Position Tracker 11:07 Deploying the API Gateway 04:49 Deploying the Webapp 06:40 Persistence 12:00 Upgrading to a Mongo Pod 13:48 Mongo Service 06:22 Expanding the Minikube VM 02:50 Volume Mounts 09:26 Volumes 14:25 PersistentVolumeClaims 16:26 StorageClasses and Binding 09:24 Warning 00:34 Getting started with AWS 10:58 Managing a Cluster in the Cloud 09:12 EKS vs Kops - Which to Choose? 09:39 Pricing Differences - EKS vs Kops (prices correct mid 2020) 08:18 Choose Your Own Adventure! 00:24 This Section is for Kops! 00:10 Introducing Kops - Kubernetes Operations 10:15 Installing the Kops Environment - 2021 Update 18:39 Configuring your first cluster 20:04 Running the Cluster 14:03 This section is for EKS 00:07 Getting started with EKS 13:12 Install eksctl and AWS CLI 06:05 Configure the AWS credentials 13:24 Install kubectl 04:28 Start the cluster 04:29 This section is for both EKS and Kops 00:15 Provisioning SSD drives with a StorageClass 12:51 Warning - problems with AWS LoadBalancers 00:46 Note for Kops users 00:44 Deploying the Fleetman Workload to Kubernetes 13:17 Setting up a real Domain Name 04:02 Surviving Node Failure 10:09 Replicating Pods in Kubernetes 11:03 Deleting the Cluster 10:28 Preview 05:34 How to delete your EKS cluster 07:06 One last cluster deletion step 01:01 Preview 00:31 Introducing the ELK / ElasticStack 15:39 Installing the Stack to Kubernetes 16:06 Kibana - first look 09:01 Setting Filters and Refreshes 05:01 Preview 05:14 Kibana Dashboards 15:25 Monitoring a Cluster (2020 update) 05:31 Installing the kube-prometheus-stack 15:16 Use the “Classic UI” in the next video 00:07 Using the Prometheus UI 17:19 Introducing Grafana 21:52 (optional) How to Use NodePorts on a Cluster 17:29 Introducing Alerts - 2020 Update 11:46 Preparing a Slack Channel 10:15 Configuring the AlertManager 15:17 Troubleshoot the alertmanager.yaml config 16:40 Dealing with Firing Alerts 16:32 The AlertManager UI and how to Silence Alerts 09:24 How to handle the Watchdog 14:31 Using PagerDuty 17:11 Case Study 00:21 Case Study: Troubleshooting a “Delinquent” node 13:02 What happens if the Master Node crashes? (Kops clusters only!) 10:34 Preview 02:40 Code / files for this section 00:06 Memory requests 20:40 CPU Requests 07:05 Memory and CPU Limits 14:49 Enabling the Metrics Server 14:25 Viewing Metrics on the Dashboard 16:42 Tuning Java Spring Boot Applications, Heap restriction 22:52 Setting reasonable Requests 07:42 Update: you will need to modify the yaml file in the next video 00:26 Introducing Replication and Autoscaling 30:59 Testing Autoscaling 07:29 Demo: why readiness probes are needed 12:01 Applying Liveness and Readiness Probes 08:56 Understanding the scheduler 15:37 QoS labels 04:58 Evictions 12:03 Pod Priorities 12:40 Creating a ConfigMap 07:33 Consuming a ConfigMap as Environment Variables 05:29","date":"0001-01-01","objectID":"/preview/:0:0","tags":null,"title":"","uri":"/preview/"}]