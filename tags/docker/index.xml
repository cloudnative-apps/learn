<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Docker - Tag - Tech Blog</title><link>http://localhost:1313/learn.github.io/tags/docker/</link><description>Docker - Tag - Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sharadit2011@outlook.com (Sharad)</managingEditor><webMaster>sharadit2011@outlook.com (Sharad)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 01 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/learn.github.io/tags/docker/" rel="self" type="application/rss+xml"/><item><title>Docker And Kubernetes</title><link>http://localhost:1313/learn.github.io/containerization/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate><author>Sharad</author><guid>http://localhost:1313/learn.github.io/containerization/</guid><description><![CDATA[<h2 id="docker">Docker</h2>
<h3 id="install-docker">Install Docker</h3>
<h4 id="install-docker-windows">Install Docker: Windows</h4>
<p>Use the following URL and download the installation file:
<a href="https://hub.docker.com/editions/community/docker-ce-desktop-windows" target="_blank" rel="noopener noreffer ">https://hub.docker.com/editions/community/docker-ce-desktop-windows</a></p>
<h4 id="install-docker-linux">Install Docker: Linux</h4>
<p>Use the following URL and download the installation file:
<a href="https://hub.docker.com/editions/community/docker-ce-desktop-windows" target="_blank" rel="noopener noreffer ">https://hub.docker.com/editions/community/docker-ce-desktop-windows</a></p>
<h4 id="install-docker-mac">Install Docker: Mac</h4>
<p>Use the following URL and download the installation file:
<a href="https://hub.docker.com/editions/community/docker-ce-desktop-windows" target="_blank" rel="noopener noreffer ">https://hub.docker.com/editions/community/docker-ce-desktop-windows</a></p>
<h5 id="commands">Commands</h5>
<p>$ docker version // docker version</p>
<ul>
<li>
<p>Create Cluster
eksctl create cluster &ndash;name=eksdemo1 &ndash;region=us-east-1 &ndash;zones=us-east-1a,us-east-1b &ndash;without-nodegroup</p>
</li>
<li>
<p>Get List of clusters
eksctl get cluster</p>
</li>
</ul>
<h4 id="step-02-create--associate-iam-oidc-provider-for-our-eks-cluster">Step-02: Create &amp; Associate IAM OIDC Provider for our EKS Cluster</h4>
<p>To enable and use AWS IAM roles for Kubernetes service accounts on our EKS cluster, we must create &amp; associate OIDC identity provider.
To do so using eksctl we can use the below command.
Use latest eksctl version (as on today the latest version is 0.21.0)</p>
<h1 id="template">Template</h1>
<p>eksctl utils associate-iam-oidc-provider <br>
&ndash;region region-code <br>
&ndash;cluster <cluter-name> <br>
&ndash;approve</p>
<h1 id="replace-with-region--cluster-name">Replace with region &amp; cluster name</h1>
<p>eksctl utils associate-iam-oidc-provider   &ndash;region us-east-1   &ndash;cluster eksdemo1   &ndash;approve</p>
<h6 id="step-03-create-ec2-keypair">Step-03: Create EC2 Keypair</h6>
<p>Create a new EC2 Keypair with name as kube-demo
This keypair we will use it when creating the EKS NodeGroup.
This will help us to login to the EKS Worker Nodes using Terminal.
Step-04: Create Node Group with additional Add-Ons in Public Subnets
These add-ons will create the respective IAM policies for us automatically within our Node Group role.</p>
<h1 id="create-public-node-group">Create Public Node Group</h1>
<p>eksctl create nodegroup &ndash;cluster=eksdemo1 <br>
&ndash;region=us-east-1 <br>
&ndash;name=eksdemo1-ng-public1 <br>
&ndash;node-type=t3.medium <br>
&ndash;nodes=2 <br>
&ndash;nodes-min=2 <br>
&ndash;nodes-max=4 <br>
&ndash;node-volume-size=20 <br>
&ndash;ssh-access <br>
&ndash;ssh-public-key=kube-demo <br>
&ndash;managed <br>
&ndash;asg-access <br>
&ndash;external-dns-access <br>
&ndash;full-ecr-access <br>
&ndash;appmesh-access <br>
&ndash;alb-ingress-access</p>
<p>eksctl create nodegroup &ndash;cluster=eksdemo1    &ndash;region=us-east-1  &ndash;name=eksdemo1-ng-public1                       &ndash;node-type=t3.medium  &ndash;nodes=2  &ndash;nodes-min=2 &ndash;nodes-max=4 &ndash;node-volume-size=20 &ndash;ssh-access                        &ndash;ssh-public-key=ekc-ecs-demo-2022 &ndash;managed &ndash;asg-access &ndash;external-dns-access &ndash;full-ecr-access                       &ndash;appmesh-access &ndash;alb-ingress-access</p>
<p>Step-05: Verify Cluster &amp; Nodes</p>
<h1 id="list-eks-clusters">List EKS clusters</h1>
<p>eksctl get cluster</p>
<h1 id="list-nodegroups-in-a-cluster">List NodeGroups in a cluster</h1>
<p>eksctl get nodegroup &ndash;cluster=<clusterName></p>
<h1 id="list-nodes-in-current-kubernetes-cluster">List Nodes in current kubernetes cluster</h1>
<p>kubectl get nodes -o wide</p>
<h1 id="our-kubectl-context-should-be-automatically-changed-to-new-cluster">Our kubectl context should be automatically changed to new cluster</h1>
<p>kubectl config view &ndash;minify</p>
<h2 id="install-kubectl">Install KubeCtl</h2>
<p>Reference: <a href="https://docs.aws.amazon.com/eks/latest/userguide/install-kubectl.html" target="_blank" rel="noopener noreffer ">https://docs.aws.amazon.com/eks/latest/userguide/install-kubectl.html</a></p>
<h4 id="primary-scalar-types">Primary scalar types</h4>
<ul>
<li>
<p>Create Cluster
eksctl create cluster &ndash;name=eksdemo1 &ndash;region=us-east-1 &ndash;zones=us-east-1a,us-east-1b &ndash;without-nodegroup</p>
</li>
<li>
<p>Get List of clusters
eksctl get cluster</p>
</li>
</ul>
<h4 id="step-02-create--associate-iam-oidc-provider-for-our-eks-cluster-1">Step-02: Create &amp; Associate IAM OIDC Provider for our EKS Cluster</h4>
<p>To enable and use AWS IAM roles for Kubernetes service accounts on our EKS cluster, we must create &amp; associate OIDC identity provider.
To do so using eksctl we can use the below command.
Use latest eksctl version (as on today the latest version is 0.21.0)</p>
<h1 id="template-1">Template</h1>
<p>eksctl utils associate-iam-oidc-provider <br>
&ndash;region region-code <br>
&ndash;cluster <cluter-name> <br>
&ndash;approve</p>
<h1 id="replace-with-region--cluster-name-1">Replace with region &amp; cluster name</h1>
<p>eksctl utils associate-iam-oidc-provider   &ndash;region us-east-1   &ndash;cluster eksdemo1   &ndash;approve</p>
<h6 id="step-03-create-ec2-keypair-1">Step-03: Create EC2 Keypair</h6>
<p>Create a new EC2 Keypair with name as kube-demo
This keypair we will use it when creating the EKS NodeGroup.
This will help us to login to the EKS Worker Nodes using Terminal.
Step-04: Create Node Group with additional Add-Ons in Public Subnets
These add-ons will create the respective IAM policies for us automatically within our Node Group role.</p>
<h1 id="create-public-node-group-1">Create Public Node Group</h1>
<p>eksctl create nodegroup &ndash;cluster=eksdemo1 <br>
&ndash;region=us-east-1 <br>
&ndash;name=eksdemo1-ng-public1 <br>
&ndash;node-type=t3.medium <br>
&ndash;nodes=2 <br>
&ndash;nodes-min=2 <br>
&ndash;nodes-max=4 <br>
&ndash;node-volume-size=20 <br>
&ndash;ssh-access <br>
&ndash;ssh-public-key=kube-demo <br>
&ndash;managed <br>
&ndash;asg-access <br>
&ndash;external-dns-access <br>
&ndash;full-ecr-access <br>
&ndash;appmesh-access <br>
&ndash;alb-ingress-access</p>
<p>eksctl create nodegroup &ndash;cluster=eksdemo1    &ndash;region=us-east-1  &ndash;name=eksdemo1-ng-public1                       &ndash;node-type=t3.medium  &ndash;nodes=2  &ndash;nodes-min=2 &ndash;nodes-max=4 &ndash;node-volume-size=20 &ndash;ssh-access                        &ndash;ssh-public-key=ekc-ecs-demo-2022 &ndash;managed &ndash;asg-access &ndash;external-dns-access &ndash;full-ecr-access                       &ndash;appmesh-access &ndash;alb-ingress-access</p>
<p>Step-05: Verify Cluster &amp; Nodes</p>
<h1 id="list-eks-clusters-1">List EKS clusters</h1>
<p>eksctl get cluster</p>
<h1 id="list-nodegroups-in-a-cluster-1">List NodeGroups in a cluster</h1>
<p>eksctl get nodegroup &ndash;cluster=<clusterName></p>
<h1 id="list-nodes-in-current-kubernetes-cluster-1">List Nodes in current kubernetes cluster</h1>
<p>kubectl get nodes -o wide</p>
<h1 id="our-kubectl-context-should-be-automatically-changed-to-new-cluster-1">Our kubectl context should be automatically changed to new cluster</h1>
<p>kubectl config view &ndash;minify</p>
<h3 id="ecr-elastic-container-registory">ECR (Elastic Container registory)</h3>
<p>URL <a href="https://aws.amazon.com/ecr/pricing/" target="_blank" rel="noopener noreffer ">https://aws.amazon.com/ecr/pricing/</a></p>
<p>//Create repo
aws ecr create-repository &ndash;repository-name demo-repository
// Delete repo
aws ecr delete-repository &ndash;repository-name demo-repository</p>]]></description></item></channel></rss>